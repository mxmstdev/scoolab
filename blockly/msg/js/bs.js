// This file was automatically generated.  Do not modify.

'use strict';

const messages = Object.create(null);

messages["ADD_COMMENT"] = "Dodaj komentar";
messages["CANNOT_DELETE_VARIABLE_PROCEDURE"] = "Ne mogu izbrisati varijablu \"%1\" jer je dio definicije funckije \"%2\"";
messages["CHANGE_VALUE_TITLE"] = "Promijeni vrijednost:";
messages["CLEAN_UP"] = "Očisti blokove";
messages["COLLAPSED_WARNINGS_WARNING"] = "Collapsed blocks contain warnings.";  // untranslated
messages["COLLAPSE_ALL"] = "Skupi blokove";
messages["COLLAPSE_BLOCK"] = "Skupi blok";
messages["COLOUR_BLEND_COLOUR1"] = "boju 1";
messages["COLOUR_BLEND_COLOUR2"] = "boju 2";
messages["COLOUR_BLEND_HELPURL"] = "https://meyerweb.com/eric/tools/color-blend/#:::rgbp";  // untranslated
messages["COLOUR_BLEND_RATIO"] = "odnos";
messages["COLOUR_BLEND_TITLE"] = "pomiješaj";
messages["COLOUR_BLEND_TOOLTIP"] = "Pomiješaj dvije boje zajedno sa zadanim odnosom (0.0 - 1.0).";
messages["COLOUR_PICKER_HELPURL"] = "https://bs.wikipedia.org/wiki/Boja";
messages["COLOUR_PICKER_TOOLTIP"] = "Izaberi boju sa palete.";
messages["COLOUR_RANDOM_HELPURL"] = "http://randomcolour.com";  // untranslated
messages["COLOUR_RANDOM_TITLE"] = "nasumična boja";
messages["COLOUR_RANDOM_TOOLTIP"] = "Odaberi boju nasumično.";
messages["COLOUR_RGB_BLUE"] = "plavom";
messages["COLOUR_RGB_GREEN"] = "zelenom";
messages["COLOUR_RGB_HELPURL"] = "https://www.december.com/html/spec/colorpercompact.html";  // untranslated
messages["COLOUR_RGB_RED"] = "crvenom";
messages["COLOUR_RGB_TITLE"] = "boja sa";
messages["COLOUR_RGB_TOOLTIP"] = "Napravi boju s određenom količinom crvene, zelene i plave boje. Sve vrijednosti moraju biti između 0 i 100.";
messages["CONTROLS_FLOW_STATEMENTS_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
messages["CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK"] = "izađi iz petlje";
messages["CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE"] = "nastavi sa sljedećom iteracijom petlje";
messages["CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK"] = "Napusti petlju koja sadrži ovaj blok.";
messages["CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE"] = "Preskoči ostatak ove petlje i nastavi sa sljedećom iteracijom.";
messages["CONTROLS_FLOW_STATEMENTS_WARNING"] = "Upozorenje: Ovaj blok se može koristiti samo unutar petlje.";
messages["CONTROLS_FOREACH_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
messages["CONTROLS_FOREACH_TITLE"] = "za svaku stavku %1 na spisku %2";
messages["CONTROLS_FOREACH_TOOLTIP"] = "Za svaku stavku na spisku, dodjeljuje vrijednost stavke varijabli \"%1\", a zatim izvršava neke naredbe.";
messages["CONTROLS_FOR_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
messages["CONTROLS_FOR_TITLE"] = "broji sa %1 od %2 do %3 po %4";
messages["CONTROLS_FOR_TOOLTIP"] = "Neka varijabla \"%1\" uzima vrijednosti od početnog do krajnjeg broja, brojeći po određenom intervalu i neka izvršava određene blokove.";
messages["CONTROLS_IF_ELSEIF_TOOLTIP"] = "Dodajte uslov bloku \"ako\".";
messages["CONTROLS_IF_ELSE_TOOLTIP"] = "Add a final, catch-all condition to the if block.";  // untranslated
messages["CONTROLS_IF_HELPURL"] = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
messages["CONTROLS_IF_IF_TOOLTIP"] = "Add, remove, or reorder sections to reconfigure this if block.";  // untranslated
messages["CONTROLS_IF_MSG_ELSE"] = "inače";
messages["CONTROLS_IF_MSG_ELSEIF"] = "inače ako";
messages["CONTROLS_IF_MSG_IF"] = "ako";
messages["CONTROLS_IF_TOOLTIP_1"] = "Ako je vrijednost tačna, izvršava neke naredbe.";
messages["CONTROLS_IF_TOOLTIP_2"] = "Ako je vrijednost tačna, izvršava neke naredbe. U suprotnom, izvršava drugi blok naredbi.";
messages["CONTROLS_IF_TOOLTIP_3"] = "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements.";  // untranslated
messages["CONTROLS_IF_TOOLTIP_4"] = "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements. If none of the values are true, do the last block of statements.";  // untranslated
messages["CONTROLS_REPEAT_HELPURL"] = "https://en.wikipedia.org/wiki/For_loop";  // untranslated
messages["CONTROLS_REPEAT_INPUT_DO"] = "izvrši";
messages["CONTROLS_REPEAT_TITLE"] = "ponovi %1 puta";
messages["CONTROLS_REPEAT_TOOLTIP"] = "Izvrši neku naredbu nekoliko puta.";
messages["CONTROLS_WHILEUNTIL_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
messages["CONTROLS_WHILEUNTIL_OPERATOR_UNTIL"] = "ponavljati do";
messages["CONTROLS_WHILEUNTIL_OPERATOR_WHILE"] = "ponavljati dok";
messages["CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL"] = "Dok je vrijednost netačna, izvršava neke naredbe.";
messages["CONTROLS_WHILEUNTIL_TOOLTIP_WHILE"] = "Dok je vrijednost tačna, izvršava neke naredbe.";
messages["DELETE_ALL_BLOCKS"] = "Izbrisati svih %1 blokova?";
messages["DELETE_BLOCK"] = "Obriši blok";
messages["DELETE_VARIABLE"] = "Izbriši varijablu \"%1\"";
messages["DELETE_VARIABLE_CONFIRMATION"] = "Izbrisati %1 upotrebu varijable \"%2\"?";
messages["DELETE_X_BLOCKS"] = "Obriši %1 blokova";
messages["DIALOG_CANCEL"] = "Otkaži";
messages["DIALOG_OK"] = "U redu";
messages["DISABLE_BLOCK"] = "Onemogući blok";
messages["DUPLICATE_BLOCK"] = "Dupliciraj";
messages["DUPLICATE_COMMENT"] = "Kopiraj komentar";
messages["ENABLE_BLOCK"] = "Omogući blok";
messages["EXPAND_ALL"] = "Proširi blokove";
messages["EXPAND_BLOCK"] = "Proširi blok";
messages["EXTERNAL_INPUTS"] = "Vanjski ulazi";
messages["HELP"] = "Pomoć";
messages["INLINE_INPUTS"] = "Redni ulazi";
messages["LISTS_CREATE_EMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
messages["LISTS_CREATE_EMPTY_TITLE"] = "create empty list";  // untranslated
messages["LISTS_CREATE_EMPTY_TOOLTIP"] = "Returns a list, of length 0, containing no data records";  // untranslated
messages["LISTS_CREATE_WITH_CONTAINER_TITLE_ADD"] = "list";  // untranslated
messages["LISTS_CREATE_WITH_CONTAINER_TOOLTIP"] = "Add, remove, or reorder sections to reconfigure this list block.";  // untranslated
messages["LISTS_CREATE_WITH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
messages["LISTS_CREATE_WITH_INPUT_WITH"] = "create list with";  // untranslated
messages["LISTS_CREATE_WITH_ITEM_TOOLTIP"] = "Add an item to the list.";  // untranslated
messages["LISTS_CREATE_WITH_TOOLTIP"] = "Create a list with any number of items.";  // untranslated
messages["LISTS_GET_INDEX_FIRST"] = "first";  // untranslated
messages["LISTS_GET_INDEX_FROM_END"] = "# from end";  // untranslated
messages["LISTS_GET_INDEX_FROM_START"] = "#";  // untranslated
messages["LISTS_GET_INDEX_GET"] = "get";  // untranslated
messages["LISTS_GET_INDEX_GET_REMOVE"] = "get and remove";  // untranslated
messages["LISTS_GET_INDEX_LAST"] = "last";  // untranslated
messages["LISTS_GET_INDEX_RANDOM"] = "random";  // untranslated
messages["LISTS_GET_INDEX_REMOVE"] = "remove";  // untranslated
messages["LISTS_GET_INDEX_TAIL"] = "";  // untranslated
messages["LISTS_GET_INDEX_TOOLTIP_GET_FIRST"] = "Returns the first item in a list.";  // untranslated
messages["LISTS_GET_INDEX_TOOLTIP_GET_FROM"] = "Returns the item at the specified position in a list.";  // untranslated
messages["LISTS_GET_INDEX_TOOLTIP_GET_LAST"] = "Returns the last item in a list.";  // untranslated
messages["LISTS_GET_INDEX_TOOLTIP_GET_RANDOM"] = "Returns a random item in a list.";  // untranslated
messages["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST"] = "Removes and returns the first item in a list.";  // untranslated
messages["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM"] = "Removes and returns the item at the specified position in a list.";  // untranslated
messages["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST"] = "Removes and returns the last item in a list.";  // untranslated
messages["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM"] = "Removes and returns a random item in a list.";  // untranslated
messages["LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST"] = "Removes the first item in a list.";  // untranslated
messages["LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM"] = "Removes the item at the specified position in a list.";  // untranslated
messages["LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST"] = "Removes the last item in a list.";  // untranslated
messages["LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM"] = "Removes a random item in a list.";  // untranslated
messages["LISTS_GET_SUBLIST_END_FROM_END"] = "to # from end";  // untranslated
messages["LISTS_GET_SUBLIST_END_FROM_START"] = "to #";  // untranslated
messages["LISTS_GET_SUBLIST_END_LAST"] = "to last";  // untranslated
messages["LISTS_GET_SUBLIST_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
messages["LISTS_GET_SUBLIST_START_FIRST"] = "get sub-list from first";  // untranslated
messages["LISTS_GET_SUBLIST_START_FROM_END"] = "get sub-list from # from end";  // untranslated
messages["LISTS_GET_SUBLIST_START_FROM_START"] = "get sub-list from #";  // untranslated
messages["LISTS_GET_SUBLIST_TAIL"] = "";  // untranslated
messages["LISTS_GET_SUBLIST_TOOLTIP"] = "Creates a copy of the specified portion of a list.";  // untranslated
messages["LISTS_INDEX_FROM_END_TOOLTIP"] = "%1 is the last item.";  // untranslated
messages["LISTS_INDEX_FROM_START_TOOLTIP"] = "%1 is the first item.";  // untranslated
messages["LISTS_INDEX_OF_FIRST"] = "pronađi prvo pojavljivanje stavke";
messages["LISTS_INDEX_OF_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
messages["LISTS_INDEX_OF_LAST"] = "pronađi posljednje pojavljivanje stavke";
messages["LISTS_INDEX_OF_TOOLTIP"] = "Returns the index of the first/last occurrence of the item in the list. Returns %1 if item is not found.";  // untranslated
messages["LISTS_INLIST"] = "na spisku";
messages["LISTS_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
messages["LISTS_ISEMPTY_TITLE"] = "%1 je prazan";
messages["LISTS_ISEMPTY_TOOLTIP"] = "Vraća \"tačno\" ako je spisak prazan.";
messages["LISTS_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
messages["LISTS_LENGTH_TITLE"] = "dužina spiska %1";
messages["LISTS_LENGTH_TOOLTIP"] = "Vraća dužinu spiska.";
messages["LISTS_REPEAT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
messages["LISTS_REPEAT_TITLE"] = "create list with item %1 repeated %2 times";  // untranslated
messages["LISTS_REPEAT_TOOLTIP"] = "Creates a list consisting of the given value repeated the specified number of times.";  // untranslated
messages["LISTS_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#reversing-a-list";  // untranslated
messages["LISTS_REVERSE_MESSAGE0"] = "reverse %1";  // untranslated
messages["LISTS_REVERSE_TOOLTIP"] = "Reverse a copy of a list.";  // untranslated
messages["LISTS_SET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
messages["LISTS_SET_INDEX_INPUT_TO"] = "as";  // untranslated
messages["LISTS_SET_INDEX_INSERT"] = "insert at";  // untranslated
messages["LISTS_SET_INDEX_SET"] = "set";  // untranslated
messages["LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST"] = "Inserts the item at the start of a list.";  // untranslated
messages["LISTS_SET_INDEX_TOOLTIP_INSERT_FROM"] = "Inserts the item at the specified position in a list.";  // untranslated
messages["LISTS_SET_INDEX_TOOLTIP_INSERT_LAST"] = "Append the item to the end of a list.";  // untranslated
messages["LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM"] = "Inserts the item randomly in a list.";  // untranslated
messages["LISTS_SET_INDEX_TOOLTIP_SET_FIRST"] = "Sets the first item in a list.";  // untranslated
messages["LISTS_SET_INDEX_TOOLTIP_SET_FROM"] = "Sets the item at the specified position in a list.";  // untranslated
messages["LISTS_SET_INDEX_TOOLTIP_SET_LAST"] = "Sets the last item in a list.";  // untranslated
messages["LISTS_SET_INDEX_TOOLTIP_SET_RANDOM"] = "Sets a random item in a list.";  // untranslated
messages["LISTS_SORT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";  // untranslated
messages["LISTS_SORT_ORDER_ASCENDING"] = "ascending";  // untranslated
messages["LISTS_SORT_ORDER_DESCENDING"] = "descending";  // untranslated
messages["LISTS_SORT_TITLE"] = "sort %1 %2 %3";  // untranslated
messages["LISTS_SORT_TOOLTIP"] = "Sort a copy of a list.";  // untranslated
messages["LISTS_SORT_TYPE_IGNORECASE"] = "alphabetic, ignore case";  // untranslated
messages["LISTS_SORT_TYPE_NUMERIC"] = "numeric";  // untranslated
messages["LISTS_SORT_TYPE_TEXT"] = "alphabetic";  // untranslated
messages["LISTS_SPLIT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated
messages["LISTS_SPLIT_LIST_FROM_TEXT"] = "make list from text";  // untranslated
messages["LISTS_SPLIT_TEXT_FROM_LIST"] = "make text from list";  // untranslated
messages["LISTS_SPLIT_TOOLTIP_JOIN"] = "Join a list of texts into one text, separated by a delimiter.";  // untranslated
messages["LISTS_SPLIT_TOOLTIP_SPLIT"] = "Split text into a list of texts, breaking at each delimiter.";  // untranslated
messages["LISTS_SPLIT_WITH_DELIMITER"] = "with delimiter";  // untranslated
messages["LOGIC_BOOLEAN_FALSE"] = "netačno";
messages["LOGIC_BOOLEAN_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
messages["LOGIC_BOOLEAN_TOOLTIP"] = "Vraća ili tačno ili netačno.";
messages["LOGIC_BOOLEAN_TRUE"] = "tačno";
messages["LOGIC_COMPARE_HELPURL"] = "https://bs.wikipedia.org/wiki/Nejednakost";
messages["LOGIC_COMPARE_TOOLTIP_EQ"] = "Return true if both inputs equal each other.";  // untranslated
messages["LOGIC_COMPARE_TOOLTIP_GT"] = "Return true if the first input is greater than the second input.";  // untranslated
messages["LOGIC_COMPARE_TOOLTIP_GTE"] = "Return true if the first input is greater than or equal to the second input.";  // untranslated
messages["LOGIC_COMPARE_TOOLTIP_LT"] = "Return true if the first input is smaller than the second input.";  // untranslated
messages["LOGIC_COMPARE_TOOLTIP_LTE"] = "Return true if the first input is smaller than or equal to the second input.";  // untranslated
messages["LOGIC_COMPARE_TOOLTIP_NEQ"] = "Return true if both inputs are not equal to each other.";  // untranslated
messages["LOGIC_NEGATE_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
messages["LOGIC_NEGATE_TITLE"] = "nije %1";
messages["LOGIC_NEGATE_TOOLTIP"] = "Returns true if the input is false. Returns false if the input is true.";  // untranslated
messages["LOGIC_NULL"] = "bez vrijednosti";
messages["LOGIC_NULL_HELPURL"] = "https://en.wikipedia.org/wiki/Nullable_type";  // untranslated
messages["LOGIC_NULL_TOOLTIP"] = "Vraća \"bez vrijednosti\".";
messages["LOGIC_OPERATION_AND"] = "i";
messages["LOGIC_OPERATION_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
messages["LOGIC_OPERATION_OR"] = "ili";
messages["LOGIC_OPERATION_TOOLTIP_AND"] = "Return true if both inputs are true.";  // untranslated
messages["LOGIC_OPERATION_TOOLTIP_OR"] = "Return true if at least one of the inputs is true.";  // untranslated
messages["LOGIC_TERNARY_CONDITION"] = "test";
messages["LOGIC_TERNARY_HELPURL"] = "https://en.wikipedia.org/wiki/%3F:";  // untranslated
messages["LOGIC_TERNARY_IF_FALSE"] = "ako je netačno";
messages["LOGIC_TERNARY_IF_TRUE"] = "ako je tačno";
messages["LOGIC_TERNARY_TOOLTIP"] = "Check the condition in 'test'. If the condition is true, returns the 'if true' value; otherwise returns the 'if false' value.";  // untranslated
messages["MATH_ADDITION_SYMBOL"] = "+";  // untranslated
messages["MATH_ARITHMETIC_HELPURL"] = "https://bs.wikipedia.org/wiki/Aritmetika";
messages["MATH_ARITHMETIC_TOOLTIP_ADD"] = "Vraća zbir dva broja.";
messages["MATH_ARITHMETIC_TOOLTIP_DIVIDE"] = "Vraća količnik dva broja.";
messages["MATH_ARITHMETIC_TOOLTIP_MINUS"] = "Vraća razliku dva broja.";
messages["MATH_ARITHMETIC_TOOLTIP_MULTIPLY"] = "Vraća proizvod dva broja.";
messages["MATH_ARITHMETIC_TOOLTIP_POWER"] = "Vraća prvi broj na eksponent drugog broja.";
messages["MATH_ATAN2_HELPURL"] = "https://en.wikipedia.org/wiki/Atan2";  // untranslated
messages["MATH_ATAN2_TITLE"] = "atan2 of X:%1 Y:%2";  // untranslated
messages["MATH_ATAN2_TOOLTIP"] = "Return the arctangent of point (X, Y) in degrees from -180 to 180.";  // untranslated
messages["MATH_CHANGE_HELPURL"] = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";  // untranslated
messages["MATH_CHANGE_TITLE"] = "promijeni %1 za %2";
messages["MATH_CHANGE_TOOLTIP"] = "Dodaj broj varijabli \"%1\".";
messages["MATH_CONSTANT_HELPURL"] = "https://bs.wikipedia.org/wiki/Matemati%C4%8Dka_konstanta";
messages["MATH_CONSTANT_TOOLTIP"] = "Vraća jednu od uobičajenih konstanti: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…) ili ∞ (beskonačnost).";
messages["MATH_CONSTRAIN_HELPURL"] = "https://en.wikipedia.org/wiki/Clamping_(graphics)";  // untranslated
messages["MATH_CONSTRAIN_TITLE"] = "constrain %1 low %2 high %3";  // untranslated
messages["MATH_CONSTRAIN_TOOLTIP"] = "Constrain a number to be between the specified limits (inclusive).";  // untranslated
messages["MATH_DIVISION_SYMBOL"] = "÷";  // untranslated
messages["MATH_IS_DIVISIBLE_BY"] = "je djeljiv sa";
messages["MATH_IS_EVEN"] = "je paran";
messages["MATH_IS_NEGATIVE"] = "je negativan";
messages["MATH_IS_ODD"] = "je neparan";
messages["MATH_IS_POSITIVE"] = "je pozitivan";
messages["MATH_IS_PRIME"] = "je prost";
messages["MATH_IS_TOOLTIP"] = "Provjerava da li je broj paran, neparan, prost, cijeli, pozitivan, negativan ili je djeljiv s određenim brojem. Vraća tačno ili netačno.";
messages["MATH_IS_WHOLE"] = "je cijeli";
messages["MATH_MODULO_HELPURL"] = "https://en.wikipedia.org/wiki/Modulo_operation";  // untranslated
messages["MATH_MODULO_TITLE"] = "remainder of %1 ÷ %2";  // untranslated
messages["MATH_MODULO_TOOLTIP"] = "Return the remainder from dividing the two numbers.";  // untranslated
messages["MATH_MULTIPLICATION_SYMBOL"] = "×";  // untranslated
messages["MATH_NUMBER_HELPURL"] = "https://bs.wikipedia.org/wiki/Broj";
messages["MATH_NUMBER_TOOLTIP"] = "Broj.";
messages["MATH_ONLIST_HELPURL"] = "";  // untranslated
messages["MATH_ONLIST_OPERATOR_AVERAGE"] = "average of list";  // untranslated
messages["MATH_ONLIST_OPERATOR_MAX"] = "max of list";  // untranslated
messages["MATH_ONLIST_OPERATOR_MEDIAN"] = "median of list";  // untranslated
messages["MATH_ONLIST_OPERATOR_MIN"] = "min of list";  // untranslated
messages["MATH_ONLIST_OPERATOR_MODE"] = "modes of list";  // untranslated
messages["MATH_ONLIST_OPERATOR_RANDOM"] = "random item of list";  // untranslated
messages["MATH_ONLIST_OPERATOR_STD_DEV"] = "standard deviation of list";  // untranslated
messages["MATH_ONLIST_OPERATOR_SUM"] = "zbir spiska";
messages["MATH_ONLIST_TOOLTIP_AVERAGE"] = "Return the average (arithmetic mean) of the numeric values in the list.";  // untranslated
messages["MATH_ONLIST_TOOLTIP_MAX"] = "Return the largest number in the list.";  // untranslated
messages["MATH_ONLIST_TOOLTIP_MEDIAN"] = "Return the median number in the list.";  // untranslated
messages["MATH_ONLIST_TOOLTIP_MIN"] = "Return the smallest number in the list.";  // untranslated
messages["MATH_ONLIST_TOOLTIP_MODE"] = "Return a list of the most common item(s) in the list.";  // untranslated
messages["MATH_ONLIST_TOOLTIP_RANDOM"] = "Return a random element from the list.";  // untranslated
messages["MATH_ONLIST_TOOLTIP_STD_DEV"] = "Return the standard deviation of the list.";  // untranslated
messages["MATH_ONLIST_TOOLTIP_SUM"] = "Vraća zbir svih brojeva sa spiska.";
messages["MATH_POWER_SYMBOL"] = "^";  // untranslated
messages["MATH_RANDOM_FLOAT_HELPURL"] = "https://en.wikipedia.org/wiki/Random_number_generation";  // untranslated
messages["MATH_RANDOM_FLOAT_TITLE_RANDOM"] = "random fraction";  // untranslated
messages["MATH_RANDOM_FLOAT_TOOLTIP"] = "Return a random fraction between 0.0 (inclusive) and 1.0 (exclusive).";  // untranslated
messages["MATH_RANDOM_INT_HELPURL"] = "https://en.wikipedia.org/wiki/Random_number_generation";  // untranslated
messages["MATH_RANDOM_INT_TITLE"] = "random integer from %1 to %2";  // untranslated
messages["MATH_RANDOM_INT_TOOLTIP"] = "Return a random integer between the two specified limits, inclusive.";  // untranslated
messages["MATH_ROUND_HELPURL"] = "https://en.wikipedia.org/wiki/Rounding";  // untranslated
messages["MATH_ROUND_OPERATOR_ROUND"] = "zaokruži";
messages["MATH_ROUND_OPERATOR_ROUNDDOWN"] = "zaokruži naniže";
messages["MATH_ROUND_OPERATOR_ROUNDUP"] = "zaokruži naviše";
messages["MATH_ROUND_TOOLTIP"] = "Zaokružuje broj na veću ili manju vrijednost.";
messages["MATH_SINGLE_HELPURL"] = "https://bs.wikipedia.org/wiki/Kvadratni_korijen";
messages["MATH_SINGLE_OP_ABSOLUTE"] = "apsolutno";
messages["MATH_SINGLE_OP_ROOT"] = "kvadratni korijen";
messages["MATH_SINGLE_TOOLTIP_ABS"] = "Vraća absolutnu vrijednost broja.";
messages["MATH_SINGLE_TOOLTIP_EXP"] = "Vraća e na eksponent broja.";
messages["MATH_SINGLE_TOOLTIP_LN"] = "Vraća prirodni logoritam broja.";
messages["MATH_SINGLE_TOOLTIP_LOG10"] = "Vraća logoritam broja za bazu 10.";
messages["MATH_SINGLE_TOOLTIP_NEG"] = "Vraća negaciju broja.";
messages["MATH_SINGLE_TOOLTIP_POW10"] = "Vraća 10 na eksponent broja.";
messages["MATH_SINGLE_TOOLTIP_ROOT"] = "Vraća kvadratni korijen broja";
messages["MATH_SUBTRACTION_SYMBOL"] = "-";  // untranslated
messages["MATH_TRIG_ACOS"] = "acos";  // untranslated
messages["MATH_TRIG_ASIN"] = "asin";  // untranslated
messages["MATH_TRIG_ATAN"] = "atan";  // untranslated
messages["MATH_TRIG_COS"] = "cos";  // untranslated
messages["MATH_TRIG_HELPURL"] = "https://bs.wikipedia.org/wiki/Trigonometrijska_funkcija";
messages["MATH_TRIG_SIN"] = "sin";  // untranslated
messages["MATH_TRIG_TAN"] = "tan";  // untranslated
messages["MATH_TRIG_TOOLTIP_ACOS"] = "Vraća arkuskosinus broja.";
messages["MATH_TRIG_TOOLTIP_ASIN"] = "Vraća arkussinus broja.";
messages["MATH_TRIG_TOOLTIP_ATAN"] = "Vraća arkustangens broja.";
messages["MATH_TRIG_TOOLTIP_COS"] = "Vraća kosinus stepena (ne radijana).";
messages["MATH_TRIG_TOOLTIP_SIN"] = "Vraća sinus stepena (ne radijana).";
messages["MATH_TRIG_TOOLTIP_TAN"] = "Vraća tangens stepena (ne radijana).";
messages["NEW_COLOUR_VARIABLE"] = "Napravi varijablu boje...";
messages["NEW_NUMBER_VARIABLE"] = "Napravi varijablu broja...";
messages["NEW_STRING_VARIABLE"] = "Napravi varijablu niza...";
messages["NEW_VARIABLE"] = "Napravi varijablu...";
messages["NEW_VARIABLE_TITLE"] = "Ime nove varijable:";
messages["NEW_VARIABLE_TYPE_TITLE"] = "Vrsta nove varijable:";
messages["ORDINAL_NUMBER_SUFFIX"] = "";  // untranslated
messages["PROCEDURES_ALLOW_STATEMENTS"] = "allow statements";  // untranslated
messages["PROCEDURES_BEFORE_PARAMS"] = "with:";  // untranslated
messages["PROCEDURES_CALLNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
messages["PROCEDURES_CALLNORETURN_TOOLTIP"] = "Run the user-defined function '%1'.";  // untranslated
messages["PROCEDURES_CALLRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
messages["PROCEDURES_CALLRETURN_TOOLTIP"] = "Run the user-defined function '%1' and use its output.";  // untranslated
messages["PROCEDURES_CALL_BEFORE_PARAMS"] = "with:";  // untranslated
messages["PROCEDURES_CREATE_DO"] = "Create '%1'";  // untranslated
messages["PROCEDURES_DEFNORETURN_COMMENT"] = "Describe this function...";  // untranslated
messages["PROCEDURES_DEFNORETURN_DO"] = "";  // untranslated
messages["PROCEDURES_DEFNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
messages["PROCEDURES_DEFNORETURN_PROCEDURE"] = "do something";  // untranslated
messages["PROCEDURES_DEFNORETURN_TITLE"] = "to";  // untranslated
messages["PROCEDURES_DEFNORETURN_TOOLTIP"] = "Creates a function with no output.";  // untranslated
messages["PROCEDURES_DEFRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
messages["PROCEDURES_DEFRETURN_RETURN"] = "return";  // untranslated
messages["PROCEDURES_DEFRETURN_TOOLTIP"] = "Creates a function with an output.";  // untranslated
messages["PROCEDURES_DEF_DUPLICATE_WARNING"] = "Warning: This function has duplicate parameters.";  // untranslated
messages["PROCEDURES_HIGHLIGHT_DEF"] = "Highlight function definition";  // untranslated
messages["PROCEDURES_IFRETURN_HELPURL"] = "http://c2.com/cgi/wiki?GuardClause";  // untranslated
messages["PROCEDURES_IFRETURN_TOOLTIP"] = "If a value is true, then return a second value.";  // untranslated
messages["PROCEDURES_IFRETURN_WARNING"] = "Warning: This block may be used only within a function definition.";  // untranslated
messages["PROCEDURES_MUTATORARG_TITLE"] = "ime ulaza:";
messages["PROCEDURES_MUTATORARG_TOOLTIP"] = "Add an input to the function.";  // untranslated
messages["PROCEDURES_MUTATORCONTAINER_TITLE"] = "inputs";  // untranslated
messages["PROCEDURES_MUTATORCONTAINER_TOOLTIP"] = "Add, remove, or reorder inputs to this function.";  // untranslated
messages["REDO"] = "Ponovi";
messages["REMOVE_COMMENT"] = "Ukloni komentare";
messages["RENAME_VARIABLE"] = "Preimenuj varijablu...";
messages["RENAME_VARIABLE_TITLE"] = "Preimenuj sve \"%1\" varijable u:";
messages["TEXT_APPEND_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
messages["TEXT_APPEND_TITLE"] = "to %1 append text %2";  // untranslated
messages["TEXT_APPEND_TOOLTIP"] = "Append some text to variable '%1'.";  // untranslated
messages["TEXT_CHANGECASE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
messages["TEXT_CHANGECASE_OPERATOR_LOWERCASE"] = "to lower case";  // untranslated
messages["TEXT_CHANGECASE_OPERATOR_TITLECASE"] = "to Title Case";  // untranslated
messages["TEXT_CHANGECASE_OPERATOR_UPPERCASE"] = "to UPPER CASE";  // untranslated
messages["TEXT_CHANGECASE_TOOLTIP"] = "Return a copy of the text in a different case.";  // untranslated
messages["TEXT_CHARAT_FIRST"] = "get first letter";  // untranslated
messages["TEXT_CHARAT_FROM_END"] = "get letter # from end";  // untranslated
messages["TEXT_CHARAT_FROM_START"] = "get letter #";  // untranslated
messages["TEXT_CHARAT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
messages["TEXT_CHARAT_LAST"] = "get last letter";  // untranslated
messages["TEXT_CHARAT_RANDOM"] = "get random letter";  // untranslated
messages["TEXT_CHARAT_TAIL"] = "";  // untranslated
messages["TEXT_CHARAT_TITLE"] = "in text %1 %2";  // untranslated
messages["TEXT_CHARAT_TOOLTIP"] = "Returns the letter at the specified position.";  // untranslated
messages["TEXT_COUNT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#counting-substrings";  // untranslated
messages["TEXT_COUNT_MESSAGE0"] = "count %1 in %2";  // untranslated
messages["TEXT_COUNT_TOOLTIP"] = "Count how many times some text occurs within some other text.";  // untranslated
messages["TEXT_CREATE_JOIN_ITEM_TOOLTIP"] = "Add an item to the text.";  // untranslated
messages["TEXT_CREATE_JOIN_TITLE_JOIN"] = "join";  // untranslated
messages["TEXT_CREATE_JOIN_TOOLTIP"] = "Add, remove, or reorder sections to reconfigure this text block.";  // untranslated
messages["TEXT_GET_SUBSTRING_END_FROM_END"] = "to letter # from end";  // untranslated
messages["TEXT_GET_SUBSTRING_END_FROM_START"] = "to letter #";  // untranslated
messages["TEXT_GET_SUBSTRING_END_LAST"] = "to last letter";  // untranslated
messages["TEXT_GET_SUBSTRING_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
messages["TEXT_GET_SUBSTRING_INPUT_IN_TEXT"] = "in text";  // untranslated
messages["TEXT_GET_SUBSTRING_START_FIRST"] = "get substring from first letter";  // untranslated
messages["TEXT_GET_SUBSTRING_START_FROM_END"] = "get substring from letter # from end";  // untranslated
messages["TEXT_GET_SUBSTRING_START_FROM_START"] = "get substring from letter #";  // untranslated
messages["TEXT_GET_SUBSTRING_TAIL"] = "";  // untranslated
messages["TEXT_GET_SUBSTRING_TOOLTIP"] = "Returns a specified portion of the text.";  // untranslated
messages["TEXT_INDEXOF_HELPURL"] = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
messages["TEXT_INDEXOF_OPERATOR_FIRST"] = "find first occurrence of text";  // untranslated
messages["TEXT_INDEXOF_OPERATOR_LAST"] = "find last occurrence of text";  // untranslated
messages["TEXT_INDEXOF_TITLE"] = "in text %1 %2 %3";  // untranslated
messages["TEXT_INDEXOF_TOOLTIP"] = "Returns the index of the first/last occurrence of the first text in the second text. Returns %1 if text is not found.";  // untranslated
messages["TEXT_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
messages["TEXT_ISEMPTY_TITLE"] = "%1 je prazan";
messages["TEXT_ISEMPTY_TOOLTIP"] = "Returns true if the provided text is empty.";  // untranslated
messages["TEXT_JOIN_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
messages["TEXT_JOIN_TITLE_CREATEWITH"] = "create text with";  // untranslated
messages["TEXT_JOIN_TOOLTIP"] = "Create a piece of text by joining together any number of items.";  // untranslated
messages["TEXT_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
messages["TEXT_LENGTH_TITLE"] = "dužina teksta %1";
messages["TEXT_LENGTH_TOOLTIP"] = "Returns the number of letters (including spaces) in the provided text.";  // untranslated
messages["TEXT_PRINT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
messages["TEXT_PRINT_TITLE"] = "print %1";  // untranslated
messages["TEXT_PRINT_TOOLTIP"] = "Print the specified text, number or other value.";  // untranslated
messages["TEXT_PROMPT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
messages["TEXT_PROMPT_TOOLTIP_NUMBER"] = "Prompt for user for a number.";  // untranslated
messages["TEXT_PROMPT_TOOLTIP_TEXT"] = "Prompt for user for some text.";  // untranslated
messages["TEXT_PROMPT_TYPE_NUMBER"] = "prompt for number with message";  // untranslated
messages["TEXT_PROMPT_TYPE_TEXT"] = "prompt for text with message";  // untranslated
messages["TEXT_REPLACE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#replacing-substrings";  // untranslated
messages["TEXT_REPLACE_MESSAGE0"] = "replace %1 with %2 in %3";  // untranslated
messages["TEXT_REPLACE_TOOLTIP"] = "Replace all occurances of some text within some other text.";  // untranslated
messages["TEXT_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#reversing-text";  // untranslated
messages["TEXT_REVERSE_MESSAGE0"] = "reverse %1";  // untranslated
messages["TEXT_REVERSE_TOOLTIP"] = "Reverses the order of the characters in the text.";  // untranslated
messages["TEXT_TEXT_HELPURL"] = "https://en.wikipedia.org/wiki/String_(computer_science)";  // untranslated
messages["TEXT_TEXT_TOOLTIP"] = "A letter, word, or line of text.";  // untranslated
messages["TEXT_TRIM_HELPURL"] = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
messages["TEXT_TRIM_OPERATOR_BOTH"] = "trim spaces from both sides of";  // untranslated
messages["TEXT_TRIM_OPERATOR_LEFT"] = "trim spaces from left side of";  // untranslated
messages["TEXT_TRIM_OPERATOR_RIGHT"] = "trim spaces from right side of";  // untranslated
messages["TEXT_TRIM_TOOLTIP"] = "Return a copy of the text with spaces removed from one or both ends.";  // untranslated
messages["TODAY"] = "Danas";
messages["UNDO"] = "Poništi";
messages["UNNAMED_KEY"] = "neimenovano";
messages["VARIABLES_DEFAULT_NAME"] = "stavka";
messages["VARIABLES_GET_CREATE_SET"] = "Create 'set %1'";  // untranslated
messages["VARIABLES_GET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
messages["VARIABLES_GET_TOOLTIP"] = "Returns the value of this variable.";  // untranslated
messages["VARIABLES_SET"] = "set %1 to %2";  // untranslated
messages["VARIABLES_SET_CREATE_GET"] = "Create 'get %1'";  // untranslated
messages["VARIABLES_SET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
messages["VARIABLES_SET_TOOLTIP"] = "Sets this variable to be equal to the input.";  // untranslated
messages["VARIABLE_ALREADY_EXISTS"] = "Varijabla s imenom \"%1\" već postoji.";
messages["VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE"] = "Varijabla s imenom \"%1\" već postoji za drugu vrstu: \"%2\".";
messages["WORKSPACE_ARIA_LABEL"] = "Blockly Workspace";  // untranslated
messages["WORKSPACE_COMMENT_DEFAULT_TEXT"] = "Say something...";  // untranslated
messages["CONTROLS_FOREACH_INPUT_DO"] = messages["CONTROLS_REPEAT_INPUT_DO"];
messages["CONTROLS_FOR_INPUT_DO"] = messages["CONTROLS_REPEAT_INPUT_DO"];
messages["CONTROLS_IF_ELSEIF_TITLE_ELSEIF"] = messages["CONTROLS_IF_MSG_ELSEIF"];
messages["CONTROLS_IF_ELSE_TITLE_ELSE"] = messages["CONTROLS_IF_MSG_ELSE"];
messages["CONTROLS_IF_IF_TITLE_IF"] = messages["CONTROLS_IF_MSG_IF"];
messages["CONTROLS_IF_MSG_THEN"] = messages["CONTROLS_REPEAT_INPUT_DO"];
messages["CONTROLS_WHILEUNTIL_INPUT_DO"] = messages["CONTROLS_REPEAT_INPUT_DO"];
messages["LISTS_CREATE_WITH_ITEM_TITLE"] = messages["VARIABLES_DEFAULT_NAME"];
messages["LISTS_GET_INDEX_HELPURL"] = messages["LISTS_INDEX_OF_HELPURL"];
messages["LISTS_GET_INDEX_INPUT_IN_LIST"] = messages["LISTS_INLIST"];
messages["LISTS_GET_SUBLIST_INPUT_IN_LIST"] = messages["LISTS_INLIST"];
messages["LISTS_INDEX_OF_INPUT_IN_LIST"] = messages["LISTS_INLIST"];
messages["LISTS_SET_INDEX_INPUT_IN_LIST"] = messages["LISTS_INLIST"];
messages["MATH_CHANGE_TITLE_ITEM"] = messages["VARIABLES_DEFAULT_NAME"];
messages["PROCEDURES_DEFRETURN_COMMENT"] = messages["PROCEDURES_DEFNORETURN_COMMENT"];
messages["PROCEDURES_DEFRETURN_DO"] = messages["PROCEDURES_DEFNORETURN_DO"];
messages["PROCEDURES_DEFRETURN_PROCEDURE"] = messages["PROCEDURES_DEFNORETURN_PROCEDURE"];
messages["PROCEDURES_DEFRETURN_TITLE"] = messages["PROCEDURES_DEFNORETURN_TITLE"];
messages["TEXT_APPEND_VARIABLE"] = messages["VARIABLES_DEFAULT_NAME"];
messages["TEXT_CREATE_JOIN_ITEM_TITLE_ITEM"] = messages["VARIABLES_DEFAULT_NAME"];

messages["MATH_HUE"] = "230";
messages["LOOPS_HUE"] = "120";
messages["LISTS_HUE"] = "260";
messages["LOGIC_HUE"] = "210";
messages["VARIABLES_HUE"] = "330";
messages["TEXTS_HUE"] = "160";
messages["PROCEDURES_HUE"] = "290";
messages["COLOUR_HUE"] = "20";
messages["VARIABLES_DYNAMIC_HUE"] = "310";