// This file was automatically generated.  Do not modify.

'use strict';

const messages = Object.create(null);

messages["ADD_COMMENT"] = "Dagdag komento";
messages["CANNOT_DELETE_VARIABLE_PROCEDURE"] = "Can't delete the variable '%1' because it's part of the definition of the function '%2'";  // untranslated
messages["CHANGE_VALUE_TITLE"] = "pagbago ng value:";
messages["CLEAN_UP"] = "Clean up Blocks";  // untranslated
messages["COLLAPSED_WARNINGS_WARNING"] = "Collapsed blocks contain warnings.";  // untranslated
messages["COLLAPSE_ALL"] = "bloke";
messages["COLLAPSE_BLOCK"] = "bloke";
messages["COLOUR_BLEND_COLOUR1"] = "kulay 1";
messages["COLOUR_BLEND_COLOUR2"] = "kulay 2";
messages["COLOUR_BLEND_HELPURL"] = "https://meyerweb.com/eric/tools/color-blend/#:::rgbp";  // untranslated
messages["COLOUR_BLEND_RATIO"] = "proporsyon";
messages["COLOUR_BLEND_TITLE"] = "halo";
messages["COLOUR_BLEND_TOOLTIP"] = "Paghalo ng dalawang kulay kasama ng ibinigay na proporsyon (0.0 - 1.0).";
messages["COLOUR_PICKER_HELPURL"] = "https://en.wikipedia.org/wiki/Color";  // untranslated
messages["COLOUR_PICKER_TOOLTIP"] = "pagpili ng kulay sa paleta.";
messages["COLOUR_RANDOM_HELPURL"] = "http://randomcolour.com";  // untranslated
messages["COLOUR_RANDOM_TITLE"] = "iba ibang kulay";
messages["COLOUR_RANDOM_TOOLTIP"] = "pagpili ng iba't ibang kulay.";
messages["COLOUR_RGB_BLUE"] = "asul";
messages["COLOUR_RGB_GREEN"] = "berde";
messages["COLOUR_RGB_HELPURL"] = "https://www.december.com/html/spec/colorpercompact.html";  // untranslated
messages["COLOUR_RGB_RED"] = "pula";
messages["COLOUR_RGB_TITLE"] = "kulayan ng";
messages["COLOUR_RGB_TOOLTIP"] = "gumawa ng kulay ng may espisipikong dami ng kulay pula, berde, at asul. lahat ng halaga ay dapat sa pagitan ng 0 at 100.";
messages["CONTROLS_FLOW_STATEMENTS_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
messages["CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK"] = "putulin ang paulit ulit";
messages["CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE"] = "Magpatuloy sa susunod na pag-ulit ng loop";
messages["CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK"] = "Hatiin ang nilalaman ng loop.";
messages["CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE"] = "Laktawan ang natitirang bahagi ng loop, at magpatuloy sa susunod na pag-ulit.";
messages["CONTROLS_FLOW_STATEMENTS_WARNING"] = "Babala: Ang block ito ay maaari lamang magamit sa loob ng loop.";
messages["CONTROLS_FOREACH_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
messages["CONTROLS_FOREACH_TITLE"] = "sa bawat bagay %1 sa listahan %2";
messages["CONTROLS_FOREACH_TOOLTIP"] = "Para sa bawat item sa isang list, i-set ang variable ng '%1' sa mga item, at pagkatapos ay gumawa ng ilang mga statements.";
messages["CONTROLS_FOR_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
messages["CONTROLS_FOR_TITLE"] = "bilangin %1 mula %2 hanggang %3 ng %4";
messages["CONTROLS_FOR_TOOLTIP"] = "Magkaroon ng mga variable na \"%1\" na tanggalin ng mga halaga mula sa simulang numero hanggang sa dulong numero, at bilangin sa pamamagitan ng tinukoy na agwat, at gawin ang mga tinukoy na mga blocks.";
messages["CONTROLS_IF_ELSEIF_TOOLTIP"] = "Mag dagdag ng condition sa if block.";
messages["CONTROLS_IF_ELSE_TOOLTIP"] = "Mag Add ng final, kunin lahat ng condition sa if block.";
messages["CONTROLS_IF_HELPURL"] = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
messages["CONTROLS_IF_IF_TOOLTIP"] = "Mag Add, remove o kaya mag reorder ng sections para maayos ang if block.";
messages["CONTROLS_IF_MSG_ELSE"] = "else";  // untranslated
messages["CONTROLS_IF_MSG_ELSEIF"] = "else if";  // untranslated
messages["CONTROLS_IF_MSG_IF"] = "kung";
messages["CONTROLS_IF_TOOLTIP_1"] = "kung ang value ay true,  gagawin ang do statements.";
messages["CONTROLS_IF_TOOLTIP_2"] = "Kung ang value ay true, gagawin ang unang block ng do statements. Kung hindi, gagawin ang pangalawang block ng statement.";
messages["CONTROLS_IF_TOOLTIP_3"] = "Kung ang unang value ay true, gagawin ang first block ng statement. Kung hindi, kung ang second value ay true, gagawin ang second block ng statement.";
messages["CONTROLS_IF_TOOLTIP_4"] = "Kung ang first value ay true, gagawin ang first block ng statement. Kung hindi true ang second value, gagawin ang second block ng statement. Kung wala sa mga values ay true, gagawin ang last block ng statements.";
messages["CONTROLS_REPEAT_HELPURL"] = "https://en.wikipedia.org/wiki/For_loop";  // untranslated
messages["CONTROLS_REPEAT_INPUT_DO"] = "gawin";
messages["CONTROLS_REPEAT_TITLE"] = "ulitin %1 beses";
messages["CONTROLS_REPEAT_TOOLTIP"] = "gumawa ng ilang pangungusap ng ilang ulit.";
messages["CONTROLS_WHILEUNTIL_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
messages["CONTROLS_WHILEUNTIL_OPERATOR_UNTIL"] = "ulitin hanggang";
messages["CONTROLS_WHILEUNTIL_OPERATOR_WHILE"] = "ulitin habang";
messages["CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL"] = "Habang ang value ay false, gagawin ang ibang statements.";
messages["CONTROLS_WHILEUNTIL_TOOLTIP_WHILE"] = "Habang ang value ay true, gagawin ang ibang statements.";
messages["DELETE_ALL_BLOCKS"] = "Delete all %1 blocks?";  // untranslated
messages["DELETE_BLOCK"] = "burahin ang bloke";
messages["DELETE_VARIABLE"] = "Delete the '%1' variable";  // untranslated
messages["DELETE_VARIABLE_CONFIRMATION"] = "Delete %1 uses of the '%2' variable?";  // untranslated
messages["DELETE_X_BLOCKS"] = "burahin %1 ng bloke";
messages["DIALOG_CANCEL"] = "Cancel";  // untranslated
messages["DIALOG_OK"] = "OK";  // untranslated
messages["DISABLE_BLOCK"] = "Ipangwalang bisa ang Block";
messages["DUPLICATE_BLOCK"] = "Kaparehas";
messages["DUPLICATE_COMMENT"] = "Duplicate Comment";  // untranslated
messages["ENABLE_BLOCK"] = "Bigyan ng bisa ang Block";
messages["EXPAND_ALL"] = "Palawakin ang Blocks";
messages["EXPAND_BLOCK"] = "Palawakin ang Block";
messages["EXTERNAL_INPUTS"] = "Panlabas na Inputs";
messages["HELP"] = "Tulong";
messages["INLINE_INPUTS"] = "Inline na Inputs";
messages["LISTS_CREATE_EMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
messages["LISTS_CREATE_EMPTY_TITLE"] = "Gumawa ng walang laman na list";
messages["LISTS_CREATE_EMPTY_TOOLTIP"] = "Ibabalik ang list, na may haba na 0, nag lalaman ng walang data records";
messages["LISTS_CREATE_WITH_CONTAINER_TITLE_ADD"] = "list";  // untranslated
messages["LISTS_CREATE_WITH_CONTAINER_TOOLTIP"] = "Magdagdag, mag tanggal or mag ayos ng sections para muling maayos ang listahan ng block.";
messages["LISTS_CREATE_WITH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
messages["LISTS_CREATE_WITH_INPUT_WITH"] = "gumawa ng list kasama";
messages["LISTS_CREATE_WITH_ITEM_TOOLTIP"] = "Mag dagdag ng item sa list.";
messages["LISTS_CREATE_WITH_TOOLTIP"] = "Gumawa ng list na may kahit anong number ng items.";
messages["LISTS_GET_INDEX_FIRST"] = "Una";
messages["LISTS_GET_INDEX_FROM_END"] = "# mula katapusan";
messages["LISTS_GET_INDEX_FROM_START"] = "#";
messages["LISTS_GET_INDEX_GET"] = "kunin";
messages["LISTS_GET_INDEX_GET_REMOVE"] = "kunin at tanggalin";
messages["LISTS_GET_INDEX_LAST"] = "huli";
messages["LISTS_GET_INDEX_RANDOM"] = "nang hindi pinipili";
messages["LISTS_GET_INDEX_REMOVE"] = "tanggalin";
messages["LISTS_GET_INDEX_TAIL"] = "";  // untranslated
messages["LISTS_GET_INDEX_TOOLTIP_GET_FIRST"] = "Ibalik ang unang item sa list.";
messages["LISTS_GET_INDEX_TOOLTIP_GET_FROM"] = "Ibalik ang item sa itinakdang posisyon sa list.";
messages["LISTS_GET_INDEX_TOOLTIP_GET_LAST"] = "Ibalik ang huling item sa list.";
messages["LISTS_GET_INDEX_TOOLTIP_GET_RANDOM"] = "Nag babalik ng hindi pinipiling item sa list.";
messages["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST"] = "Nag tatanggal at nag babalik ng mga unang item sa list.";
messages["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM"] = "Nag tatanggal at nag babalik ng mga items sa tinukoy na posisyon sa list.";
messages["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST"] = "Nag tatanggal at nag babalik ng huling item sa list.";
messages["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM"] = "Nag tatanggal at nag babalik ng mga hindi pinipiling item sa list.";
messages["LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST"] = "Nag tatanggal ng unang item sa list.";
messages["LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM"] = "Nag tatanggal ng item sa tinukoy na posisyon sa list.";
messages["LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST"] = "Nag tatanggal ng huling item sa list.";
messages["LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM"] = "Nag tatanggal ng item mula sa walang pinipiling list.";
messages["LISTS_GET_SUBLIST_END_FROM_END"] = "mula # hanggang huli";
messages["LISTS_GET_SUBLIST_END_FROM_START"] = "mula #";
messages["LISTS_GET_SUBLIST_END_LAST"] = "hanggang huli";
messages["LISTS_GET_SUBLIST_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
messages["LISTS_GET_SUBLIST_START_FIRST"] = "pag kuha ng sub-list mula sa una";
messages["LISTS_GET_SUBLIST_START_FROM_END"] = "pag kuha ng sub-list mula sa # mula huli";
messages["LISTS_GET_SUBLIST_START_FROM_START"] = "pag kuha ng sub-list mula #";
messages["LISTS_GET_SUBLIST_TAIL"] = "";  // untranslated
messages["LISTS_GET_SUBLIST_TOOLTIP"] = "Gumagawa ng kopya ng tinukoy na bahagi ng list.";
messages["LISTS_INDEX_FROM_END_TOOLTIP"] = "%1 ay ang huling item.";
messages["LISTS_INDEX_FROM_START_TOOLTIP"] = "%1 ay ang unang item.";
messages["LISTS_INDEX_OF_FIRST"] = "Hanapin ang unang pangyayari ng item";
messages["LISTS_INDEX_OF_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
messages["LISTS_INDEX_OF_LAST"] = "hanapin ang huling pangyayari ng item";
messages["LISTS_INDEX_OF_TOOLTIP"] = "Pagbalik ng index ng una/huli pangyayari ng item sa list. Pagbalik ng %1 kung ang item ay hindi makita.";
messages["LISTS_INLIST"] = "sa list";
messages["LISTS_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
messages["LISTS_ISEMPTY_TITLE"] = "%1 ay walang laman";
messages["LISTS_ISEMPTY_TOOLTIP"] = "Nagbabalik ng true kung ang list ay walang laman.";
messages["LISTS_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
messages["LISTS_LENGTH_TITLE"] = "haba ng %1";
messages["LISTS_LENGTH_TOOLTIP"] = "Pag balik ng haba ng list.";
messages["LISTS_REPEAT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
messages["LISTS_REPEAT_TITLE"] = "pag gawa ng list kasama ng item %1 inuulit %2 beses";
messages["LISTS_REPEAT_TOOLTIP"] = "Pag gawa ng list na binubuo ng binigay na value at inulit na tinuloy na bilang ng beses.";
messages["LISTS_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#reversing-a-list";  // untranslated
messages["LISTS_REVERSE_MESSAGE0"] = "reverse %1";  // untranslated
messages["LISTS_REVERSE_TOOLTIP"] = "Reverse a copy of a list.";  // untranslated
messages["LISTS_SET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
messages["LISTS_SET_INDEX_INPUT_TO"] = "gaya ng";
messages["LISTS_SET_INDEX_INSERT"] = "isingit sa";
messages["LISTS_SET_INDEX_SET"] = "set";  // untranslated
messages["LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST"] = "Nag singit ng item sa simula ng list.";
messages["LISTS_SET_INDEX_TOOLTIP_INSERT_FROM"] = "Nag singit ng item sa tinukoy na posistion sa list.";
messages["LISTS_SET_INDEX_TOOLTIP_INSERT_LAST"] = "Idagdag ang item sa huli ng isang list.";
messages["LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM"] = "Isingit ang item ng walang pinipili sa isang list.";
messages["LISTS_SET_INDEX_TOOLTIP_SET_FIRST"] = "Pag set ng unang item sa isang list.";
messages["LISTS_SET_INDEX_TOOLTIP_SET_FROM"] = "Pag set ng item sa tinukoy na position sa isang list.";
messages["LISTS_SET_INDEX_TOOLTIP_SET_LAST"] = "Pag set sa huling item sa isang list.";
messages["LISTS_SET_INDEX_TOOLTIP_SET_RANDOM"] = "Pag set ng walang pinipiling item sa isang list.";
messages["LISTS_SORT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";  // untranslated
messages["LISTS_SORT_ORDER_ASCENDING"] = "ascending";  // untranslated
messages["LISTS_SORT_ORDER_DESCENDING"] = "descending";  // untranslated
messages["LISTS_SORT_TITLE"] = "sort %1 %2 %3";  // untranslated
messages["LISTS_SORT_TOOLTIP"] = "Sort a copy of a list.";  // untranslated
messages["LISTS_SORT_TYPE_IGNORECASE"] = "alphabetic, ignore case";  // untranslated
messages["LISTS_SORT_TYPE_NUMERIC"] = "numeric";  // untranslated
messages["LISTS_SORT_TYPE_TEXT"] = "alphabetic";  // untranslated
messages["LISTS_SPLIT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated
messages["LISTS_SPLIT_LIST_FROM_TEXT"] = "make list from text";  // untranslated
messages["LISTS_SPLIT_TEXT_FROM_LIST"] = "make text from list";  // untranslated
messages["LISTS_SPLIT_TOOLTIP_JOIN"] = "Join a list of texts into one text, separated by a delimiter.";  // untranslated
messages["LISTS_SPLIT_TOOLTIP_SPLIT"] = "Split text into a list of texts, breaking at each delimiter.";  // untranslated
messages["LISTS_SPLIT_WITH_DELIMITER"] = "with delimiter";  // untranslated
messages["LOGIC_BOOLEAN_FALSE"] = "mali";
messages["LOGIC_BOOLEAN_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
messages["LOGIC_BOOLEAN_TOOLTIP"] = "Nag babalik ng true or false.";
messages["LOGIC_BOOLEAN_TRUE"] = "tama";
messages["LOGIC_COMPARE_HELPURL"] = "https://en.wikipedia.org/wiki/Inequality_(mathematics)";  // untranslated
messages["LOGIC_COMPARE_TOOLTIP_EQ"] = "Nag babalik ng true kung ang pinasok ay parehong magkatumbas.";
messages["LOGIC_COMPARE_TOOLTIP_GT"] = "Nagbabalik ng true kung ang unang pinasok ay mas malaki kaysa pangalawang pinasok.";
messages["LOGIC_COMPARE_TOOLTIP_GTE"] = "Nag babalik ng true kung ang unang pinasok ay mas malaki or katumbas ng pangalawang pinasok.";
messages["LOGIC_COMPARE_TOOLTIP_LT"] = "Nag babalik ng true kung ang unang pinasok ay maliit kaysa sa pangalawang pinasok.";
messages["LOGIC_COMPARE_TOOLTIP_LTE"] = "Nag babalik ng true kung ang unang pinasok ay maliit sa o katumbas sa pangalawang pinasok.";
messages["LOGIC_COMPARE_TOOLTIP_NEQ"] = "Return true if both inputs are not equal to each other.";
messages["LOGIC_NEGATE_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
messages["LOGIC_NEGATE_TITLE"] = "not %1";  // untranslated
messages["LOGIC_NEGATE_TOOLTIP"] = "Returns true if the input is false. Returns false if the input is true.";  // untranslated
messages["LOGIC_NULL"] = "blangko";
messages["LOGIC_NULL_HELPURL"] = "https://en.wikipedia.org/wiki/Nullable_type";  // untranslated
messages["LOGIC_NULL_TOOLTIP"] = "Returns null.";  // untranslated
messages["LOGIC_OPERATION_AND"] = "at";
messages["LOGIC_OPERATION_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
messages["LOGIC_OPERATION_OR"] = "o";
messages["LOGIC_OPERATION_TOOLTIP_AND"] = "Return true if both inputs are true.";  // untranslated
messages["LOGIC_OPERATION_TOOLTIP_OR"] = "Return true if at least one of the inputs is true.";  // untranslated
messages["LOGIC_TERNARY_CONDITION"] = "test";  // untranslated
messages["LOGIC_TERNARY_HELPURL"] = "https://en.wikipedia.org/wiki/%3F:";  // untranslated
messages["LOGIC_TERNARY_IF_FALSE"] = "kung mali";
messages["LOGIC_TERNARY_IF_TRUE"] = "kung tama";
messages["LOGIC_TERNARY_TOOLTIP"] = "Check the condition in 'test'. If the condition is true, returns the 'if true' value; otherwise returns the 'if false' value.";  // untranslated
messages["MATH_ADDITION_SYMBOL"] = "+";  // untranslated
messages["MATH_ARITHMETIC_HELPURL"] = "https://en.wikipedia.org/wiki/Arithmetic";  // untranslated
messages["MATH_ARITHMETIC_TOOLTIP_ADD"] = "Return the sum of the two numbers.";  // untranslated
messages["MATH_ARITHMETIC_TOOLTIP_DIVIDE"] = "Return the quotient of the two numbers.";  // untranslated
messages["MATH_ARITHMETIC_TOOLTIP_MINUS"] = "Return the difference of the two numbers.";  // untranslated
messages["MATH_ARITHMETIC_TOOLTIP_MULTIPLY"] = "Return the product of the two numbers.";  // untranslated
messages["MATH_ARITHMETIC_TOOLTIP_POWER"] = "Return the first number raised to the power of the second number.";  // untranslated
messages["MATH_ATAN2_HELPURL"] = "https://en.wikipedia.org/wiki/Atan2";  // untranslated
messages["MATH_ATAN2_TITLE"] = "atan2 of X:%1 Y:%2";  // untranslated
messages["MATH_ATAN2_TOOLTIP"] = "Return the arctangent of point (X, Y) in degrees from -180 to 180.";  // untranslated
messages["MATH_CHANGE_HELPURL"] = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";  // untranslated
messages["MATH_CHANGE_TITLE"] = "baguhin %1 by %2";
messages["MATH_CHANGE_TOOLTIP"] = "Add a number to variable '%1'.";  // untranslated
messages["MATH_CONSTANT_HELPURL"] = "https://en.wikipedia.org/wiki/Mathematical_constant";  // untranslated
messages["MATH_CONSTANT_TOOLTIP"] = "Return one of the common constants: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), or ∞ (infinity).";  // untranslated
messages["MATH_CONSTRAIN_HELPURL"] = "https://en.wikipedia.org/wiki/Clamping_(graphics)";  // untranslated
messages["MATH_CONSTRAIN_TITLE"] = "constrain %1 low %2 high %3";  // untranslated
messages["MATH_CONSTRAIN_TOOLTIP"] = "Constrain a number to be between the specified limits (inclusive).";  // untranslated
messages["MATH_DIVISION_SYMBOL"] = "÷";  // untranslated
messages["MATH_IS_DIVISIBLE_BY"] = "is divisible by";  // untranslated
messages["MATH_IS_EVEN"] = "is even";  // untranslated
messages["MATH_IS_NEGATIVE"] = "ay negatibo";
messages["MATH_IS_ODD"] = "is odd";  // untranslated
messages["MATH_IS_POSITIVE"] = "ay positibo";
messages["MATH_IS_PRIME"] = "is prime";  // untranslated
messages["MATH_IS_TOOLTIP"] = "Check if a number is an even, odd, prime, whole, positive, negative, or if it is divisible by certain number. Returns true or false.";  // untranslated
messages["MATH_IS_WHOLE"] = "is whole";  // untranslated
messages["MATH_MODULO_HELPURL"] = "https://en.wikipedia.org/wiki/Modulo_operation";  // untranslated
messages["MATH_MODULO_TITLE"] = "remainder of %1 ÷ %2";  // untranslated
messages["MATH_MODULO_TOOLTIP"] = "Return the remainder from dividing the two numbers.";  // untranslated
messages["MATH_MULTIPLICATION_SYMBOL"] = "×";  // untranslated
messages["MATH_NUMBER_HELPURL"] = "https://en.wikipedia.org/wiki/Number";  // untranslated
messages["MATH_NUMBER_TOOLTIP"] = "A number.";  // untranslated
messages["MATH_ONLIST_HELPURL"] = "";  // untranslated
messages["MATH_ONLIST_OPERATOR_AVERAGE"] = "average of list";  // untranslated
messages["MATH_ONLIST_OPERATOR_MAX"] = "max of list";  // untranslated
messages["MATH_ONLIST_OPERATOR_MEDIAN"] = "median of list";  // untranslated
messages["MATH_ONLIST_OPERATOR_MIN"] = "min of list";  // untranslated
messages["MATH_ONLIST_OPERATOR_MODE"] = "modes of list";  // untranslated
messages["MATH_ONLIST_OPERATOR_RANDOM"] = "random item of list";  // untranslated
messages["MATH_ONLIST_OPERATOR_STD_DEV"] = "standard deviation of list";  // untranslated
messages["MATH_ONLIST_OPERATOR_SUM"] = "sum of list";  // untranslated
messages["MATH_ONLIST_TOOLTIP_AVERAGE"] = "Return the average (arithmetic mean) of the numeric values in the list.";  // untranslated
messages["MATH_ONLIST_TOOLTIP_MAX"] = "Return the largest number in the list.";  // untranslated
messages["MATH_ONLIST_TOOLTIP_MEDIAN"] = "Return the median number in the list.";  // untranslated
messages["MATH_ONLIST_TOOLTIP_MIN"] = "Return the smallest number in the list.";  // untranslated
messages["MATH_ONLIST_TOOLTIP_MODE"] = "Return a list of the most common item(s) in the list.";  // untranslated
messages["MATH_ONLIST_TOOLTIP_RANDOM"] = "Return a random element from the list.";  // untranslated
messages["MATH_ONLIST_TOOLTIP_STD_DEV"] = "Return the standard deviation of the list.";  // untranslated
messages["MATH_ONLIST_TOOLTIP_SUM"] = "Return the sum of all the numbers in the list.";  // untranslated
messages["MATH_POWER_SYMBOL"] = "^";  // untranslated
messages["MATH_RANDOM_FLOAT_HELPURL"] = "https://en.wikipedia.org/wiki/Random_number_generation";  // untranslated
messages["MATH_RANDOM_FLOAT_TITLE_RANDOM"] = "random fraction";  // untranslated
messages["MATH_RANDOM_FLOAT_TOOLTIP"] = "Return a random fraction between 0.0 (inclusive) and 1.0 (exclusive).";  // untranslated
messages["MATH_RANDOM_INT_HELPURL"] = "https://en.wikipedia.org/wiki/Random_number_generation";  // untranslated
messages["MATH_RANDOM_INT_TITLE"] = "random integer from %1 to %2";  // untranslated
messages["MATH_RANDOM_INT_TOOLTIP"] = "Return a random integer between the two specified limits, inclusive.";  // untranslated
messages["MATH_ROUND_HELPURL"] = "https://en.wikipedia.org/wiki/Rounding";  // untranslated
messages["MATH_ROUND_OPERATOR_ROUND"] = "round";  // untranslated
messages["MATH_ROUND_OPERATOR_ROUNDDOWN"] = "round down";  // untranslated
messages["MATH_ROUND_OPERATOR_ROUNDUP"] = "round up";  // untranslated
messages["MATH_ROUND_TOOLTIP"] = "Round a number up or down.";  // untranslated
messages["MATH_SINGLE_HELPURL"] = "https://en.wikipedia.org/wiki/Square_root";  // untranslated
messages["MATH_SINGLE_OP_ABSOLUTE"] = "absolute";  // untranslated
messages["MATH_SINGLE_OP_ROOT"] = "square root";  // untranslated
messages["MATH_SINGLE_TOOLTIP_ABS"] = "Return the absolute value of a number.";  // untranslated
messages["MATH_SINGLE_TOOLTIP_EXP"] = "Return e to the power of a number.";  // untranslated
messages["MATH_SINGLE_TOOLTIP_LN"] = "Return the natural logarithm of a number.";  // untranslated
messages["MATH_SINGLE_TOOLTIP_LOG10"] = "Return the base 10 logarithm of a number.";  // untranslated
messages["MATH_SINGLE_TOOLTIP_NEG"] = "Return the negation of a number.";  // untranslated
messages["MATH_SINGLE_TOOLTIP_POW10"] = "Return 10 to the power of a number.";  // untranslated
messages["MATH_SINGLE_TOOLTIP_ROOT"] = "Return the square root of a number.";  // untranslated
messages["MATH_SUBTRACTION_SYMBOL"] = "-";  // untranslated
messages["MATH_TRIG_ACOS"] = "acos";  // untranslated
messages["MATH_TRIG_ASIN"] = "asin";  // untranslated
messages["MATH_TRIG_ATAN"] = "atan";  // untranslated
messages["MATH_TRIG_COS"] = "cos";  // untranslated
messages["MATH_TRIG_HELPURL"] = "https://en.wikipedia.org/wiki/Trigonometric_functions";  // untranslated
messages["MATH_TRIG_SIN"] = "sin";  // untranslated
messages["MATH_TRIG_TAN"] = "tan";  // untranslated
messages["MATH_TRIG_TOOLTIP_ACOS"] = "Return the arccosine of a number.";  // untranslated
messages["MATH_TRIG_TOOLTIP_ASIN"] = "Return the arcsine of a number.";  // untranslated
messages["MATH_TRIG_TOOLTIP_ATAN"] = "Return the arctangent of a number.";  // untranslated
messages["MATH_TRIG_TOOLTIP_COS"] = "Return the cosine of a degree (not radian).";  // untranslated
messages["MATH_TRIG_TOOLTIP_SIN"] = "Return the sine of a degree (not radian).";  // untranslated
messages["MATH_TRIG_TOOLTIP_TAN"] = "Return the tangent of a degree (not radian).";  // untranslated
messages["NEW_COLOUR_VARIABLE"] = "Create colour variable...";  // untranslated
messages["NEW_NUMBER_VARIABLE"] = "Create number variable...";  // untranslated
messages["NEW_STRING_VARIABLE"] = "Create string variable...";  // untranslated
messages["NEW_VARIABLE"] = "Create variable...";  // untranslated
messages["NEW_VARIABLE_TITLE"] = "New variable name:";  // untranslated
messages["NEW_VARIABLE_TYPE_TITLE"] = "New variable type:";  // untranslated
messages["ORDINAL_NUMBER_SUFFIX"] = "";  // untranslated
messages["PROCEDURES_ALLOW_STATEMENTS"] = "allow statements";  // untranslated
messages["PROCEDURES_BEFORE_PARAMS"] = "with:";  // untranslated
messages["PROCEDURES_CALLNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
messages["PROCEDURES_CALLNORETURN_TOOLTIP"] = "Run the user-defined function '%1'.";  // untranslated
messages["PROCEDURES_CALLRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
messages["PROCEDURES_CALLRETURN_TOOLTIP"] = "Run the user-defined function '%1' and use its output.";  // untranslated
messages["PROCEDURES_CALL_BEFORE_PARAMS"] = "with:";  // untranslated
messages["PROCEDURES_CREATE_DO"] = "Create '%1'";  // untranslated
messages["PROCEDURES_DEFNORETURN_COMMENT"] = "Describe this function...";  // untranslated
messages["PROCEDURES_DEFNORETURN_DO"] = "";  // untranslated
messages["PROCEDURES_DEFNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
messages["PROCEDURES_DEFNORETURN_PROCEDURE"] = "do something";  // untranslated
messages["PROCEDURES_DEFNORETURN_TITLE"] = "to";  // untranslated
messages["PROCEDURES_DEFNORETURN_TOOLTIP"] = "Creates a function with no output.";  // untranslated
messages["PROCEDURES_DEFRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
messages["PROCEDURES_DEFRETURN_RETURN"] = "return";  // untranslated
messages["PROCEDURES_DEFRETURN_TOOLTIP"] = "Creates a function with an output.";  // untranslated
messages["PROCEDURES_DEF_DUPLICATE_WARNING"] = "Warning: This function has duplicate parameters.";  // untranslated
messages["PROCEDURES_HIGHLIGHT_DEF"] = "Highlight function definition";  // untranslated
messages["PROCEDURES_IFRETURN_HELPURL"] = "http://c2.com/cgi/wiki?GuardClause";  // untranslated
messages["PROCEDURES_IFRETURN_TOOLTIP"] = "If a value is true, then return a second value.";  // untranslated
messages["PROCEDURES_IFRETURN_WARNING"] = "Warning: This block may be used only within a function definition.";  // untranslated
messages["PROCEDURES_MUTATORARG_TITLE"] = "input name:";  // untranslated
messages["PROCEDURES_MUTATORARG_TOOLTIP"] = "Add an input to the function.";  // untranslated
messages["PROCEDURES_MUTATORCONTAINER_TITLE"] = "inputs";  // untranslated
messages["PROCEDURES_MUTATORCONTAINER_TOOLTIP"] = "Add, remove, or reorder inputs to this function.";  // untranslated
messages["REDO"] = "Redo";  // untranslated
messages["REMOVE_COMMENT"] = "Remove Comment";  // untranslated
messages["RENAME_VARIABLE"] = "Rename variable...";  // untranslated
messages["RENAME_VARIABLE_TITLE"] = "Rename all '%1' variables to:";  // untranslated
messages["TEXT_APPEND_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
messages["TEXT_APPEND_TITLE"] = "to %1 append text %2";  // untranslated
messages["TEXT_APPEND_TOOLTIP"] = "Append some text to variable '%1'.";  // untranslated
messages["TEXT_CHANGECASE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
messages["TEXT_CHANGECASE_OPERATOR_LOWERCASE"] = "to lower case";  // untranslated
messages["TEXT_CHANGECASE_OPERATOR_TITLECASE"] = "to Title Case";  // untranslated
messages["TEXT_CHANGECASE_OPERATOR_UPPERCASE"] = "to UPPER CASE";  // untranslated
messages["TEXT_CHANGECASE_TOOLTIP"] = "Return a copy of the text in a different case.";  // untranslated
messages["TEXT_CHARAT_FIRST"] = "get first letter";  // untranslated
messages["TEXT_CHARAT_FROM_END"] = "get letter # from end";  // untranslated
messages["TEXT_CHARAT_FROM_START"] = "get letter #";  // untranslated
messages["TEXT_CHARAT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
messages["TEXT_CHARAT_LAST"] = "get last letter";  // untranslated
messages["TEXT_CHARAT_RANDOM"] = "get random letter";  // untranslated
messages["TEXT_CHARAT_TAIL"] = "";  // untranslated
messages["TEXT_CHARAT_TITLE"] = "in text %1 %2";  // untranslated
messages["TEXT_CHARAT_TOOLTIP"] = "Returns the letter at the specified position.";  // untranslated
messages["TEXT_COUNT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#counting-substrings";  // untranslated
messages["TEXT_COUNT_MESSAGE0"] = "count %1 in %2";  // untranslated
messages["TEXT_COUNT_TOOLTIP"] = "Count how many times some text occurs within some other text.";  // untranslated
messages["TEXT_CREATE_JOIN_ITEM_TOOLTIP"] = "Add an item to the text.";  // untranslated
messages["TEXT_CREATE_JOIN_TITLE_JOIN"] = "join";  // untranslated
messages["TEXT_CREATE_JOIN_TOOLTIP"] = "Add, remove, or reorder sections to reconfigure this text block.";  // untranslated
messages["TEXT_GET_SUBSTRING_END_FROM_END"] = "to letter # from end";  // untranslated
messages["TEXT_GET_SUBSTRING_END_FROM_START"] = "to letter #";  // untranslated
messages["TEXT_GET_SUBSTRING_END_LAST"] = "to last letter";  // untranslated
messages["TEXT_GET_SUBSTRING_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
messages["TEXT_GET_SUBSTRING_INPUT_IN_TEXT"] = "in text";  // untranslated
messages["TEXT_GET_SUBSTRING_START_FIRST"] = "get substring from first letter";  // untranslated
messages["TEXT_GET_SUBSTRING_START_FROM_END"] = "get substring from letter # from end";  // untranslated
messages["TEXT_GET_SUBSTRING_START_FROM_START"] = "get substring from letter #";  // untranslated
messages["TEXT_GET_SUBSTRING_TAIL"] = "";  // untranslated
messages["TEXT_GET_SUBSTRING_TOOLTIP"] = "Returns a specified portion of the text.";  // untranslated
messages["TEXT_INDEXOF_HELPURL"] = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
messages["TEXT_INDEXOF_OPERATOR_FIRST"] = "find first occurrence of text";  // untranslated
messages["TEXT_INDEXOF_OPERATOR_LAST"] = "find last occurrence of text";  // untranslated
messages["TEXT_INDEXOF_TITLE"] = "in text %1 %2 %3";  // untranslated
messages["TEXT_INDEXOF_TOOLTIP"] = "Returns the index of the first/last occurrence of the first text in the second text. Returns %1 if text is not found.";  // untranslated
messages["TEXT_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
messages["TEXT_ISEMPTY_TITLE"] = "%1 is empty";  // untranslated
messages["TEXT_ISEMPTY_TOOLTIP"] = "Returns true if the provided text is empty.";  // untranslated
messages["TEXT_JOIN_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
messages["TEXT_JOIN_TITLE_CREATEWITH"] = "create text with";  // untranslated
messages["TEXT_JOIN_TOOLTIP"] = "Create a piece of text by joining together any number of items.";  // untranslated
messages["TEXT_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
messages["TEXT_LENGTH_TITLE"] = "length of %1";  // untranslated
messages["TEXT_LENGTH_TOOLTIP"] = "Returns the number of letters (including spaces) in the provided text.";  // untranslated
messages["TEXT_PRINT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
messages["TEXT_PRINT_TITLE"] = "print %1";  // untranslated
messages["TEXT_PRINT_TOOLTIP"] = "Print the specified text, number or other value.";  // untranslated
messages["TEXT_PROMPT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
messages["TEXT_PROMPT_TOOLTIP_NUMBER"] = "Prompt for user for a number.";  // untranslated
messages["TEXT_PROMPT_TOOLTIP_TEXT"] = "Prompt for user for some text.";  // untranslated
messages["TEXT_PROMPT_TYPE_NUMBER"] = "prompt for number with message";  // untranslated
messages["TEXT_PROMPT_TYPE_TEXT"] = "prompt for text with message";  // untranslated
messages["TEXT_REPLACE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#replacing-substrings";  // untranslated
messages["TEXT_REPLACE_MESSAGE0"] = "replace %1 with %2 in %3";  // untranslated
messages["TEXT_REPLACE_TOOLTIP"] = "Replace all occurances of some text within some other text.";  // untranslated
messages["TEXT_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#reversing-text";  // untranslated
messages["TEXT_REVERSE_MESSAGE0"] = "reverse %1";  // untranslated
messages["TEXT_REVERSE_TOOLTIP"] = "Reverses the order of the characters in the text.";  // untranslated
messages["TEXT_TEXT_HELPURL"] = "https://en.wikipedia.org/wiki/String_(computer_science)";  // untranslated
messages["TEXT_TEXT_TOOLTIP"] = "A letter, word, or line of text.";  // untranslated
messages["TEXT_TRIM_HELPURL"] = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
messages["TEXT_TRIM_OPERATOR_BOTH"] = "trim spaces from both sides of";  // untranslated
messages["TEXT_TRIM_OPERATOR_LEFT"] = "trim spaces from left side of";  // untranslated
messages["TEXT_TRIM_OPERATOR_RIGHT"] = "trim spaces from right side of";  // untranslated
messages["TEXT_TRIM_TOOLTIP"] = "Return a copy of the text with spaces removed from one or both ends.";  // untranslated
messages["TODAY"] = "Today";  // untranslated
messages["UNDO"] = "Undo";  // untranslated
messages["UNNAMED_KEY"] = "unnamed";  // untranslated
messages["VARIABLES_DEFAULT_NAME"] = "item";  // untranslated
messages["VARIABLES_GET_CREATE_SET"] = "Create 'set %1'";  // untranslated
messages["VARIABLES_GET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
messages["VARIABLES_GET_TOOLTIP"] = "Returns the value of this variable.";  // untranslated
messages["VARIABLES_SET"] = "set %1 to %2";  // untranslated
messages["VARIABLES_SET_CREATE_GET"] = "Create 'get %1'";  // untranslated
messages["VARIABLES_SET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
messages["VARIABLES_SET_TOOLTIP"] = "Sets this variable to be equal to the input.";  // untranslated
messages["VARIABLE_ALREADY_EXISTS"] = "A variable named '%1' already exists.";  // untranslated
messages["VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE"] = "A variable named '%1' already exists for another type: '%2'.";  // untranslated
messages["WORKSPACE_ARIA_LABEL"] = "Blockly Workspace";  // untranslated
messages["WORKSPACE_COMMENT_DEFAULT_TEXT"] = "Say something...";  // untranslated
messages["CONTROLS_FOREACH_INPUT_DO"] = messages["CONTROLS_REPEAT_INPUT_DO"];
messages["CONTROLS_FOR_INPUT_DO"] = messages["CONTROLS_REPEAT_INPUT_DO"];
messages["CONTROLS_IF_ELSEIF_TITLE_ELSEIF"] = messages["CONTROLS_IF_MSG_ELSEIF"];
messages["CONTROLS_IF_ELSE_TITLE_ELSE"] = messages["CONTROLS_IF_MSG_ELSE"];
messages["CONTROLS_IF_IF_TITLE_IF"] = messages["CONTROLS_IF_MSG_IF"];
messages["CONTROLS_IF_MSG_THEN"] = messages["CONTROLS_REPEAT_INPUT_DO"];
messages["CONTROLS_WHILEUNTIL_INPUT_DO"] = messages["CONTROLS_REPEAT_INPUT_DO"];
messages["LISTS_CREATE_WITH_ITEM_TITLE"] = messages["VARIABLES_DEFAULT_NAME"];
messages["LISTS_GET_INDEX_HELPURL"] = messages["LISTS_INDEX_OF_HELPURL"];
messages["LISTS_GET_INDEX_INPUT_IN_LIST"] = messages["LISTS_INLIST"];
messages["LISTS_GET_SUBLIST_INPUT_IN_LIST"] = messages["LISTS_INLIST"];
messages["LISTS_INDEX_OF_INPUT_IN_LIST"] = messages["LISTS_INLIST"];
messages["LISTS_SET_INDEX_INPUT_IN_LIST"] = messages["LISTS_INLIST"];
messages["MATH_CHANGE_TITLE_ITEM"] = messages["VARIABLES_DEFAULT_NAME"];
messages["PROCEDURES_DEFRETURN_COMMENT"] = messages["PROCEDURES_DEFNORETURN_COMMENT"];
messages["PROCEDURES_DEFRETURN_DO"] = messages["PROCEDURES_DEFNORETURN_DO"];
messages["PROCEDURES_DEFRETURN_PROCEDURE"] = messages["PROCEDURES_DEFNORETURN_PROCEDURE"];
messages["PROCEDURES_DEFRETURN_TITLE"] = messages["PROCEDURES_DEFNORETURN_TITLE"];
messages["TEXT_APPEND_VARIABLE"] = messages["VARIABLES_DEFAULT_NAME"];
messages["TEXT_CREATE_JOIN_ITEM_TITLE_ITEM"] = messages["VARIABLES_DEFAULT_NAME"];

messages["MATH_HUE"] = "230";
messages["LOOPS_HUE"] = "120";
messages["LISTS_HUE"] = "260";
messages["LOGIC_HUE"] = "210";
messages["VARIABLES_HUE"] = "330";
messages["TEXTS_HUE"] = "160";
messages["PROCEDURES_HUE"] = "290";
messages["COLOUR_HUE"] = "20";
messages["VARIABLES_DYNAMIC_HUE"] = "310";