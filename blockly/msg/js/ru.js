// This file was automatically generated.  Do not modify.

'use strict';

const messages = Object.create(null);


messages["ADD_COMMENT"] = "Добавить комментарий";
messages["CANNOT_DELETE_VARIABLE_PROCEDURE"] = "Невозможно удалить переменную '%1', поскольку она является частью определения функции '%2'";
messages["CHANGE_VALUE_TITLE"] = "Измените значение:";
messages["CLEAN_UP"] = "Очистить блоки";
messages["COLLAPSED_WARNINGS_WARNING"] = "Свёрнутые блоки содержат предупреждения.";
messages["COLLAPSE_ALL"] = "Свернуть блоки";
messages["COLLAPSE_BLOCK"] = "Свернуть блок";
messages["COLOUR_BLEND_COLOUR1"] = "цвет 1";
messages["COLOUR_BLEND_COLOUR2"] = "цвет 2";
messages["COLOUR_BLEND_HELPURL"] = "https://meyerweb.com/eric/tools/color-blend/#:::rgbp";  // untranslated
messages["COLOUR_BLEND_RATIO"] = "доля цвета 1";
messages["COLOUR_BLEND_TITLE"] = "смешать";
messages["COLOUR_BLEND_TOOLTIP"] = "Смешивает два цвета в заданном соотношении (0.0 - 1.0).";
messages["COLOUR_PICKER_HELPURL"] = "https://ru.wikipedia.org/wiki/Цвет";
messages["COLOUR_PICKER_TOOLTIP"] = "Выберите цвет из палитры.";
messages["COLOUR_RANDOM_HELPURL"] = "http://randomcolour.com";  // untranslated
messages["COLOUR_RANDOM_TITLE"] = "случайный цвет";
messages["COLOUR_RANDOM_TOOLTIP"] = "Выбирает цвет случайным образом.";
messages["COLOUR_RGB_BLUE"] = "синего";
messages["COLOUR_RGB_GREEN"] = "зелёного";
messages["COLOUR_RGB_HELPURL"] = "https://www.december.com/html/spec/colorpercompact.html";  // untranslated
messages["COLOUR_RGB_RED"] = "красного";
messages["COLOUR_RGB_TITLE"] = "цвет из";
messages["COLOUR_RGB_TOOLTIP"] = "Создаёт цвет с указанной пропорцией красного, зелёного и синего. Все значения должны быть между 0 и 100.";
messages["CONTROLS_FLOW_STATEMENTS_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
messages["CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK"] = "выйти из цикла";
messages["CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE"] = "перейти к следующему шагу цикла";
messages["CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK"] = "Прерывает этот цикл.";
messages["CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE"] = "Пропускает остаток цикла и переходит к следующему шагу.";
messages["CONTROLS_FLOW_STATEMENTS_WARNING"] = "Предупреждение: этот блок может использоваться только внутри цикла.";
messages["CONTROLS_FOREACH_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
messages["CONTROLS_FOREACH_TITLE"] = "для каждого элемента %1 в списке %2";
messages["CONTROLS_FOREACH_TOOLTIP"] = "Для каждого элемента в списке, присваивает переменной '%1' значение элемента  и выполняет указанные  команды.";
messages["CONTROLS_FOR_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
messages["CONTROLS_FOR_TITLE"] = "цикл по %1 от %2 до %3 с шагом %4";
messages["CONTROLS_FOR_TOOLTIP"] = "Присваивает переменной '%1' значения от начального до конечного с заданным шагом и выполняет указанные команды.";
messages["CONTROLS_IF_ELSEIF_TOOLTIP"] = "Добавляет условие к блоку \"если\"";
messages["CONTROLS_IF_ELSE_TOOLTIP"] = "Добавить заключительный подблок для случая, когда все условия ложны.";
messages["CONTROLS_IF_HELPURL"] = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
messages["CONTROLS_IF_IF_TOOLTIP"] = "Добавьте, удалите, переставьте фрагменты для переделки блока \"если\".";
messages["CONTROLS_IF_MSG_ELSE"] = "иначе";
messages["CONTROLS_IF_MSG_ELSEIF"] = "иначе если";
messages["CONTROLS_IF_MSG_IF"] = "если";
messages["CONTROLS_IF_TOOLTIP_1"] = "Если условие истинно, выполняет команды.";
messages["CONTROLS_IF_TOOLTIP_2"] = "Если условие истинно, выполняет первый блок команд. Иначе выполняется второй блок команд.";
messages["CONTROLS_IF_TOOLTIP_3"] = "Если первое условие истинно, то выполняет первый блок команд. Иначе, если второе условие истинно, выполняет второй блок команд.";
messages["CONTROLS_IF_TOOLTIP_4"] = "Если первое условие истинно, то выполняет первый блок команд.  В противном случае, если второе условие истинно, выполняет второй блок команд.  Если ни одно из условий не истинно, выполняет последний блок команд.";
messages["CONTROLS_REPEAT_HELPURL"] = "https://ru.wikipedia.org/wiki/Цикл_(программирование)";
messages["CONTROLS_REPEAT_INPUT_DO"] = "выполнить";
messages["CONTROLS_REPEAT_TITLE"] = "повторить %1 раз";
messages["CONTROLS_REPEAT_TOOLTIP"] = "Выполняет некоторые команды несколько раз.";
messages["CONTROLS_WHILEUNTIL_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
messages["CONTROLS_WHILEUNTIL_OPERATOR_UNTIL"] = "повторять, пока не";
messages["CONTROLS_WHILEUNTIL_OPERATOR_WHILE"] = "повторять, пока";
messages["CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL"] = "Пока значение ложно, выполняет команды";
messages["CONTROLS_WHILEUNTIL_TOOLTIP_WHILE"] = "Пока значение истинно, выполняет команды.";
messages["DELETE_ALL_BLOCKS"] = "Удалить все блоки (%1)?";
messages["DELETE_BLOCK"] = "Удалить блок";
messages["DELETE_VARIABLE"] = "Удалить переменную '%1'";
messages["DELETE_VARIABLE_CONFIRMATION"] = "Удалить %1 использований переменной '%2'?";
messages["DELETE_X_BLOCKS"] = "Удалить %1 блоков";
messages["DIALOG_CANCEL"] = "Отмена";
messages["DIALOG_OK"] = "OK";
messages["DISABLE_BLOCK"] = "Отключить блок";
messages["DUPLICATE_BLOCK"] = "Дублировать";
messages["DUPLICATE_COMMENT"] = "Дублировать комментарий";
messages["ENABLE_BLOCK"] = "Включить блок";
messages["EXPAND_ALL"] = "Развернуть блоки";
messages["EXPAND_BLOCK"] = "Развернуть блок";
messages["EXTERNAL_INPUTS"] = "Вставки снаружи";
messages["HELP"] = "Справка";
messages["INLINE_INPUTS"] = "Вставки внутри";
messages["LISTS_CREATE_EMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
messages["LISTS_CREATE_EMPTY_TITLE"] = "создать пустой список";
messages["LISTS_CREATE_EMPTY_TOOLTIP"] = "Возвращает список длины 0, не содержащий данных";
messages["LISTS_CREATE_WITH_CONTAINER_TITLE_ADD"] = "список";
messages["LISTS_CREATE_WITH_CONTAINER_TOOLTIP"] = "Добавьте, удалите, переставьте элементы для переделки блока списка.";
messages["LISTS_CREATE_WITH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";
messages["LISTS_CREATE_WITH_INPUT_WITH"] = "создать список из";
messages["LISTS_CREATE_WITH_ITEM_TOOLTIP"] = "Добавляет элемент к списку.";
messages["LISTS_CREATE_WITH_TOOLTIP"] = "Создаёт список с любым числом элементов.";
messages["LISTS_GET_INDEX_FIRST"] = "первый";
messages["LISTS_GET_INDEX_FROM_END"] = "№ с конца";
messages["LISTS_GET_INDEX_FROM_START"] = "#";  // untranslated
messages["LISTS_GET_INDEX_GET"] = "взять";
messages["LISTS_GET_INDEX_GET_REMOVE"] = "взять и удалить";
messages["LISTS_GET_INDEX_LAST"] = "последний";
messages["LISTS_GET_INDEX_RANDOM"] = "произвольный";
messages["LISTS_GET_INDEX_REMOVE"] = "удалить";
messages["LISTS_GET_INDEX_TAIL"] = "";  // untranslated
messages["LISTS_GET_INDEX_TOOLTIP_GET_FIRST"] = "Возвращает первый элемент списка.";
messages["LISTS_GET_INDEX_TOOLTIP_GET_FROM"] = "Возвращает элемент в указанной позиции списка.";
messages["LISTS_GET_INDEX_TOOLTIP_GET_LAST"] = "Возвращает последний элемент списка.";
messages["LISTS_GET_INDEX_TOOLTIP_GET_RANDOM"] = "Возвращает случайный элемент списка.";
messages["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST"] = "Удаляет и возвращает первый элемент списка.";
messages["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM"] = "Удаляет и возвращает элемент в указанной позиции списка.";
messages["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST"] = "Удаляет и возвращает последний элемент списка.";
messages["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM"] = "Удаляет и возвращает случайный элемент списка.";
messages["LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST"] = "Удаляет первый элемент списка.";
messages["LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM"] = "Удаляет элемент в указанной позиции списка.";
messages["LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST"] = "Удаляет последний элемент списка.";
messages["LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM"] = "Удаляет случайный элемент списка.";
messages["LISTS_GET_SUBLIST_END_FROM_END"] = "по № с конца";
messages["LISTS_GET_SUBLIST_END_FROM_START"] = "по №";
messages["LISTS_GET_SUBLIST_END_LAST"] = "по последний";
messages["LISTS_GET_SUBLIST_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
messages["LISTS_GET_SUBLIST_START_FIRST"] = "взять подсписок с первого";
messages["LISTS_GET_SUBLIST_START_FROM_END"] = "взять подсписок с № с конца";
messages["LISTS_GET_SUBLIST_START_FROM_START"] = "взять подсписок с №";
messages["LISTS_GET_SUBLIST_TAIL"] = "";  // untranslated
messages["LISTS_GET_SUBLIST_TOOLTIP"] = "Создаёт копию указанной части списка.";
messages["LISTS_INDEX_FROM_END_TOOLTIP"] = "%1 - последний элемент.";
messages["LISTS_INDEX_FROM_START_TOOLTIP"] = "%1 - первый элемент.";
messages["LISTS_INDEX_OF_FIRST"] = "найти первое вхождение элемента";
messages["LISTS_INDEX_OF_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
messages["LISTS_INDEX_OF_LAST"] = "найти последнее вхождение элемента";
messages["LISTS_INDEX_OF_TOOLTIP"] = "Возвращает номер позиции первого/последнего вхождения элемента в списке. Возвращает %1, если элемент не найден.";
messages["LISTS_INLIST"] = "в списке";
messages["LISTS_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
messages["LISTS_ISEMPTY_TITLE"] = "%1 пуст";
messages["LISTS_ISEMPTY_TOOLTIP"] = "Возвращает значение истина, если список пуст.";
messages["LISTS_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
messages["LISTS_LENGTH_TITLE"] = "длина %1";
messages["LISTS_LENGTH_TOOLTIP"] = "Возвращает длину списка.";
messages["LISTS_REPEAT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
messages["LISTS_REPEAT_TITLE"] = "создать список из элемента %1, повторяющегося %2 раз";
messages["LISTS_REPEAT_TOOLTIP"] = "Создаёт список, состоящий из заданного числа копий элемента.";
messages["LISTS_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#reversing-a-list";
messages["LISTS_REVERSE_MESSAGE0"] = "изменить порядок на обратный %1";
messages["LISTS_REVERSE_TOOLTIP"] = "Изменить порядок списка на обратный.";
messages["LISTS_SET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
messages["LISTS_SET_INDEX_INPUT_TO"] = "=";
messages["LISTS_SET_INDEX_INSERT"] = "вставить в";
messages["LISTS_SET_INDEX_SET"] = "присвоить";
messages["LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST"] = "Вставляет элемент в начало списка.";
messages["LISTS_SET_INDEX_TOOLTIP_INSERT_FROM"] = "Вставляет элемент в указанной позиции списка.";
messages["LISTS_SET_INDEX_TOOLTIP_INSERT_LAST"] = "Добавляет элемент в конец списка.";
messages["LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM"] = "Вставляет элемент в случайное место в списке.";
messages["LISTS_SET_INDEX_TOOLTIP_SET_FIRST"] = "Присваивает значение первому элементу списка.";
messages["LISTS_SET_INDEX_TOOLTIP_SET_FROM"] = "Присваивает значение элементу в указанной позиции списка.";
messages["LISTS_SET_INDEX_TOOLTIP_SET_LAST"] = "Присваивает значение последнему элементу списка.";
messages["LISTS_SET_INDEX_TOOLTIP_SET_RANDOM"] = "Присваивает значение случайному элементу списка.";
messages["LISTS_SORT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";
messages["LISTS_SORT_ORDER_ASCENDING"] = "по возрастанию";
messages["LISTS_SORT_ORDER_DESCENDING"] = "по убыванию";
messages["LISTS_SORT_TITLE"] = "сортировать %1 %2 %3";
messages["LISTS_SORT_TOOLTIP"] = "Сортировать копию списка.";
messages["LISTS_SORT_TYPE_IGNORECASE"] = "по алфавиту, без учёта регистра";
messages["LISTS_SORT_TYPE_NUMERIC"] = "числовая";
messages["LISTS_SORT_TYPE_TEXT"] = "по алфавиту";
messages["LISTS_SPLIT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";
messages["LISTS_SPLIT_LIST_FROM_TEXT"] = "сделать список из текста";
messages["LISTS_SPLIT_TEXT_FROM_LIST"] = "собрать текст из списка";
messages["LISTS_SPLIT_TOOLTIP_JOIN"] = "Соединяет список текстов в один текст с разделителями.";
messages["LISTS_SPLIT_TOOLTIP_SPLIT"] = "Разбивает текст в список текстов, по разделителям.";
messages["LISTS_SPLIT_WITH_DELIMITER"] = "с разделителем";
messages["LOGIC_BOOLEAN_FALSE"] = "ложь";
messages["LOGIC_BOOLEAN_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
messages["LOGIC_BOOLEAN_TOOLTIP"] = "Возвращает значение истина или ложь.";
messages["LOGIC_BOOLEAN_TRUE"] = "истина";
messages["LOGIC_COMPARE_HELPURL"] = "https://ru.wikipedia.org/wiki/Неравенство";
messages["LOGIC_COMPARE_TOOLTIP_EQ"] = "Возвращает положительное значение, если вводы равны.";
messages["LOGIC_COMPARE_TOOLTIP_GT"] = "Возвращает значение истина, если первая вставка больше второй.";
messages["LOGIC_COMPARE_TOOLTIP_GTE"] = "Возвращает значение истина, если первая вставка больше или равна  второй.";
messages["LOGIC_COMPARE_TOOLTIP_LT"] = "Возвращает положительное значение, если первый ввод меньше второго.";
messages["LOGIC_COMPARE_TOOLTIP_LTE"] = "Возвращает значение истина, если первая вставка меньше или равна  второй.";
messages["LOGIC_COMPARE_TOOLTIP_NEQ"] = "Возвращает положительное значение, если вводы не равны.";
messages["LOGIC_NEGATE_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
messages["LOGIC_NEGATE_TITLE"] = "не %1";
messages["LOGIC_NEGATE_TOOLTIP"] = "Возвращает значение истина, если вставка ложна. Возвращает значение ложь, если вставка истинна.";
messages["LOGIC_NULL"] = "ничто";
messages["LOGIC_NULL_HELPURL"] = "https://en.wikipedia.org/wiki/Nullable_type";
messages["LOGIC_NULL_TOOLTIP"] = "Возвращает ничто.";
messages["LOGIC_OPERATION_AND"] = "и";
messages["LOGIC_OPERATION_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
messages["LOGIC_OPERATION_OR"] = "или";
messages["LOGIC_OPERATION_TOOLTIP_AND"] = "Возвращает значение истина, если обе вставки истинны.";
messages["LOGIC_OPERATION_TOOLTIP_OR"] = "Возвращает значение истина, если хотя бы одна из вставок истинна.";
messages["LOGIC_TERNARY_CONDITION"] = "выбрать по";
messages["LOGIC_TERNARY_HELPURL"] = "https://ru.wikipedia.org/wiki/Тернарная_условная_операция";
messages["LOGIC_TERNARY_IF_FALSE"] = "если ложь";
messages["LOGIC_TERNARY_IF_TRUE"] = "если истина";
messages["LOGIC_TERNARY_TOOLTIP"] = "Проверяет условие выбора. Если условие истинно, возвращает первое значение, в противном случае возвращает второе значение.";
messages["MATH_ADDITION_SYMBOL"] = "+";  // untranslated
messages["MATH_ARITHMETIC_HELPURL"] = "https://ru.wikipedia.org/wiki/Арифметика";
messages["MATH_ARITHMETIC_TOOLTIP_ADD"] = "Возвращает сумму двух чисел.";
messages["MATH_ARITHMETIC_TOOLTIP_DIVIDE"] = "Возвращает частное от деления первого числа на второе.";
messages["MATH_ARITHMETIC_TOOLTIP_MINUS"] = "Возвращает разность двух чисел.";
messages["MATH_ARITHMETIC_TOOLTIP_MULTIPLY"] = "Возвращает произведение двух чисел.";
messages["MATH_ARITHMETIC_TOOLTIP_POWER"] = "Возвращает первое число, возведённое в степень второго числа.";
messages["MATH_ATAN2_HELPURL"] = "https://en.wikipedia.org/wiki/Atan2";
messages["MATH_ATAN2_TITLE"] = "atan2 от X:%1 Y:%2";
messages["MATH_ATAN2_TOOLTIP"] = "Возвращает арктангенс точки (X, Y) в градусах от -180 до 180.";
messages["MATH_CHANGE_HELPURL"] = "https://ru.wikipedia.org/wiki/%D0%98%D0%B4%D0%B8%D0%BE%D0%BC%D0%B0_%28%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5%29#.D0.98.D0.BD.D0.BA.D1.80.D0.B5.D0.BC.D0.B5.D0.BD.D1.82";
messages["MATH_CHANGE_TITLE"] = "увеличить %1 на %2";
messages["MATH_CHANGE_TOOLTIP"] = "Добавляет число к переменной '%1'.";
messages["MATH_CONSTANT_HELPURL"] = "https://ru.wikipedia.org/wiki/Математическая_константа";
messages["MATH_CONSTANT_TOOLTIP"] = "Возвращает одну из распространённых  констант: π (3.141...), e (2.718...), φ (1.618...), sqrt(2) (1.414...), sqrt(½) (0.707...) или ∞ (бесконечность).";
messages["MATH_CONSTRAIN_HELPURL"] = "https://en.wikipedia.org/wiki/Clamping_(graphics)";  // untranslated
messages["MATH_CONSTRAIN_TITLE"] = "ограничить %1 снизу %2 сверху %3";
messages["MATH_CONSTRAIN_TOOLTIP"] = "Ограничивает число нижней и верхней границами (включительно).";
messages["MATH_DIVISION_SYMBOL"] = "÷";  // untranslated
messages["MATH_IS_DIVISIBLE_BY"] = "делится на";
messages["MATH_IS_EVEN"] = "чётное";
messages["MATH_IS_NEGATIVE"] = "отрицательное";
messages["MATH_IS_ODD"] = "нечётное";
messages["MATH_IS_POSITIVE"] = "положительное";
messages["MATH_IS_PRIME"] = "простое";
messages["MATH_IS_TOOLTIP"] = "Проверяет, является ли число чётным, нечётным, простым, целым, положительным, отрицательным или оно кратно определённому числу.  Возвращает значение истина или ложь.";
messages["MATH_IS_WHOLE"] = "целое";
messages["MATH_MODULO_HELPURL"] = "https://ru.wikipedia.org/wiki/Деление_с_остатком";
messages["MATH_MODULO_TITLE"] = "остаток от %1 : %2";
messages["MATH_MODULO_TOOLTIP"] = "Возвращает остаток от деления двух чисел.";
messages["MATH_MULTIPLICATION_SYMBOL"] = "×";  // untranslated
messages["MATH_NUMBER_HELPURL"] = "https://ru.wikipedia.org/wiki/Число";
messages["MATH_NUMBER_TOOLTIP"] = "Число.";
messages["MATH_ONLIST_HELPURL"] = "";  // untranslated
messages["MATH_ONLIST_OPERATOR_AVERAGE"] = "среднее арифметическое списка";
messages["MATH_ONLIST_OPERATOR_MAX"] = "наибольшее в списке";
messages["MATH_ONLIST_OPERATOR_MEDIAN"] = "медиана списка";
messages["MATH_ONLIST_OPERATOR_MIN"] = "наименьшее в списке";
messages["MATH_ONLIST_OPERATOR_MODE"] = "моды списка";
messages["MATH_ONLIST_OPERATOR_RANDOM"] = "случайный элемент списка";
messages["MATH_ONLIST_OPERATOR_STD_DEV"] = "стандартное отклонение списка";
messages["MATH_ONLIST_OPERATOR_SUM"] = "сумма списка";
messages["MATH_ONLIST_TOOLTIP_AVERAGE"] = "Возвращает среднее арифметическое списка.";
messages["MATH_ONLIST_TOOLTIP_MAX"] = "Возвращает наибольшее число списка.";
messages["MATH_ONLIST_TOOLTIP_MEDIAN"] = "Возвращает медиану списка.";
messages["MATH_ONLIST_TOOLTIP_MIN"] = "Возвращает наименьшее число списка.";
messages["MATH_ONLIST_TOOLTIP_MODE"] = "Возвращает список наиболее часто встречающихся элементов списка.";
messages["MATH_ONLIST_TOOLTIP_RANDOM"] = "Возвращает случайный элемент списка.";
messages["MATH_ONLIST_TOOLTIP_STD_DEV"] = "Возвращает стандартное отклонение списка.";
messages["MATH_ONLIST_TOOLTIP_SUM"] = "Возвращает сумму всех чисел в списке.";
messages["MATH_POWER_SYMBOL"] = "^";  // untranslated
messages["MATH_RANDOM_FLOAT_HELPURL"] = "https://ru.wikipedia.org/wiki/Генератор_псевдослучайных_чисел";
messages["MATH_RANDOM_FLOAT_TITLE_RANDOM"] = "случайное число от 0 (включительно) до 1";
messages["MATH_RANDOM_FLOAT_TOOLTIP"] = "Возвращает случайное число от 0.0 (включительно) до 1.0.";
messages["MATH_RANDOM_INT_HELPURL"] = "https://ru.wikipedia.org/wiki/Генератор_псевдослучайных_чисел";
messages["MATH_RANDOM_INT_TITLE"] = "случайное целое число от %1 для %2";
messages["MATH_RANDOM_INT_TOOLTIP"] = "Возвращает случайное число между двумя заданными пределами (включая и их).";
messages["MATH_ROUND_HELPURL"] = "https://ru.wikipedia.org/wiki/Округление";
messages["MATH_ROUND_OPERATOR_ROUND"] = "округлить";
messages["MATH_ROUND_OPERATOR_ROUNDDOWN"] = "округлить к меньшему";
messages["MATH_ROUND_OPERATOR_ROUNDUP"] = "округлить к большему";
messages["MATH_ROUND_TOOLTIP"] = "Округляет число до большего или меньшего.";
messages["MATH_SINGLE_HELPURL"] = "https://ru.wikipedia.org/wiki/Квадратный_корень";
messages["MATH_SINGLE_OP_ABSOLUTE"] = "модуль";
messages["MATH_SINGLE_OP_ROOT"] = "квадратный корень";
messages["MATH_SINGLE_TOOLTIP_ABS"] = "Возвращает модуль числа";
messages["MATH_SINGLE_TOOLTIP_EXP"] = "Возвращает е в указанной степени.";
messages["MATH_SINGLE_TOOLTIP_LN"] = "Возвращает натуральный логарифм числа.";
messages["MATH_SINGLE_TOOLTIP_LOG10"] = "Возвращает десятичный логарифм числа.";
messages["MATH_SINGLE_TOOLTIP_NEG"] = "Возвращает противоположное число.";
messages["MATH_SINGLE_TOOLTIP_POW10"] = "Возвращает 10 в указанной степени.";
messages["MATH_SINGLE_TOOLTIP_ROOT"] = "Возвращает квадратный корень числа.";
messages["MATH_SUBTRACTION_SYMBOL"] = "-";  // untranslated
messages["MATH_TRIG_ACOS"] = "acos";  // untranslated
messages["MATH_TRIG_ASIN"] = "asin";  // untranslated
messages["MATH_TRIG_ATAN"] = "atan";  // untranslated
messages["MATH_TRIG_COS"] = "cos";  // untranslated
messages["MATH_TRIG_HELPURL"] = "https://ru.wikipedia.org/wiki/Тригонометрические_функции";
messages["MATH_TRIG_SIN"] = "sin";  // untranslated
messages["MATH_TRIG_TAN"] = "tan";  // untranslated
messages["MATH_TRIG_TOOLTIP_ACOS"] = "Возвращает арккосинус (в градусах).";
messages["MATH_TRIG_TOOLTIP_ASIN"] = "Возвращает арксинус (в градусах).";
messages["MATH_TRIG_TOOLTIP_ATAN"] = "Возвращает арктангенс (в градусах)";
messages["MATH_TRIG_TOOLTIP_COS"] = "Возвращает косинус угла в градусах.";
messages["MATH_TRIG_TOOLTIP_SIN"] = "Возвращает синус угла в градусах.";
messages["MATH_TRIG_TOOLTIP_TAN"] = "Возвращает тангенс угла в градусах.";
messages["NEW_COLOUR_VARIABLE"] = "Создать переменную цвета...";
messages["NEW_NUMBER_VARIABLE"] = "Создать числовую переменную...";
messages["NEW_STRING_VARIABLE"] = "Создать строковую переменную...";
messages["NEW_VARIABLE"] = "Создать переменную…";
messages["NEW_VARIABLE_TITLE"] = "Имя новой переменной:";
messages["NEW_VARIABLE_TYPE_TITLE"] = "Новый тип переменной:";
messages["ORDINAL_NUMBER_SUFFIX"] = "";  // untranslated
messages["PROCEDURES_ALLOW_STATEMENTS"] = "разрешить операторы";
messages["PROCEDURES_BEFORE_PARAMS"] = "с:";
messages["PROCEDURES_CALLNORETURN_HELPURL"] = "https://ru.wikipedia.org/wiki/Подпрограмма";
messages["PROCEDURES_CALLNORETURN_TOOLTIP"] = "Исполняет определённую пользователем процедуру '%1'.";
messages["PROCEDURES_CALLRETURN_HELPURL"] = "https://ru.wikipedia.org/wiki/Подпрограмма";
messages["PROCEDURES_CALLRETURN_TOOLTIP"] = "Исполняет определённую пользователем процедуру '%1' и возвращает вычисленное  значение.";
messages["PROCEDURES_CALL_BEFORE_PARAMS"] = "с:";
messages["PROCEDURES_CREATE_DO"] = "Создать вызов '%1'";
messages["PROCEDURES_DEFNORETURN_COMMENT"] = "Опишите эту функцию…";
messages["PROCEDURES_DEFNORETURN_DO"] = "";  // untranslated
messages["PROCEDURES_DEFNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
messages["PROCEDURES_DEFNORETURN_PROCEDURE"] = "выполнить что-то";
messages["PROCEDURES_DEFNORETURN_TITLE"] = "чтобы";
messages["PROCEDURES_DEFNORETURN_TOOLTIP"] = "Создаёт процедуру, не возвращающую значение.";
messages["PROCEDURES_DEFRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
messages["PROCEDURES_DEFRETURN_RETURN"] = "вернуть";
messages["PROCEDURES_DEFRETURN_TOOLTIP"] = "Создаёт процедуру, возвращающую значение.";
messages["PROCEDURES_DEF_DUPLICATE_WARNING"] = "Предупреждение: эта функция имеет повторяющиеся параметры.";
messages["PROCEDURES_HIGHLIGHT_DEF"] = "Выделить определение процедуры";
messages["PROCEDURES_IFRETURN_HELPURL"] = "http://c2.com/cgi/wiki?GuardClause";
messages["PROCEDURES_IFRETURN_TOOLTIP"] = "Если первое значение истинно, возвращает второе значение.";
messages["PROCEDURES_IFRETURN_WARNING"] = "Предупреждение: Этот блок может использоваться только внутри определения функции.";
messages["PROCEDURES_MUTATORARG_TITLE"] = "имя параметра:";
messages["PROCEDURES_MUTATORARG_TOOLTIP"] = "Добавить входной параметр в функцию.";
messages["PROCEDURES_MUTATORCONTAINER_TITLE"] = "параметры";
messages["PROCEDURES_MUTATORCONTAINER_TOOLTIP"] = "Добавить, удалить или изменить порядок входных параметров для этой функции.";
messages["REDO"] = "Повторить";
messages["REMOVE_COMMENT"] = "Удалить комментарий";
messages["RENAME_VARIABLE"] = "Переименовать переменную…";
messages["RENAME_VARIABLE_TITLE"] = "Переименовать все переменные '%1' в:";
messages["TEXT_APPEND_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
messages["TEXT_APPEND_TITLE"] = "к %1 добавить текст %2";
messages["TEXT_APPEND_TOOLTIP"] = "Добавить текст к переменной «%1».";
messages["TEXT_CHANGECASE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
messages["TEXT_CHANGECASE_OPERATOR_LOWERCASE"] = "в строчные буквы";
messages["TEXT_CHANGECASE_OPERATOR_TITLECASE"] = "в Заглавные Начальные Буквы";
messages["TEXT_CHANGECASE_OPERATOR_UPPERCASE"] = "в ЗАГЛАВНЫЕ БУКВЫ";
messages["TEXT_CHANGECASE_TOOLTIP"] = "Возвращает копию текста с ЗАГЛАВНЫМИ или строчными буквами.";
messages["TEXT_CHARAT_FIRST"] = "взять первую букву";
messages["TEXT_CHARAT_FROM_END"] = "взять букву № с конца";
messages["TEXT_CHARAT_FROM_START"] = "взять букву №";
messages["TEXT_CHARAT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
messages["TEXT_CHARAT_LAST"] = "взять последнюю букву";
messages["TEXT_CHARAT_RANDOM"] = "взять случайную букву";
messages["TEXT_CHARAT_TAIL"] = "";  // untranslated
messages["TEXT_CHARAT_TITLE"] = "в тексте %1 %2";
messages["TEXT_CHARAT_TOOLTIP"] = "Возвращает букву в указанной позиции.";
messages["TEXT_COUNT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#counting-substrings";
messages["TEXT_COUNT_MESSAGE0"] = "подсчитать количество %1 в %2";
messages["TEXT_COUNT_TOOLTIP"] = "Подсчитать, сколько раз отрывок текста появляется в другом тексте.";
messages["TEXT_CREATE_JOIN_ITEM_TOOLTIP"] = "Добавить элемент к тексту.";
messages["TEXT_CREATE_JOIN_TITLE_JOIN"] = "соединить";
messages["TEXT_CREATE_JOIN_TOOLTIP"] = "Добавьте, удалите, переставьте фрагменты для переделки текстового блока.";
messages["TEXT_GET_SUBSTRING_END_FROM_END"] = "по букву № с конца";
messages["TEXT_GET_SUBSTRING_END_FROM_START"] = "по букву №";
messages["TEXT_GET_SUBSTRING_END_LAST"] = "по последнюю букву";
messages["TEXT_GET_SUBSTRING_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
messages["TEXT_GET_SUBSTRING_INPUT_IN_TEXT"] = "в тексте";
messages["TEXT_GET_SUBSTRING_START_FIRST"] = "взять подстроку с первой буквы";
messages["TEXT_GET_SUBSTRING_START_FROM_END"] = "взять подстроку с буквы № с конца";
messages["TEXT_GET_SUBSTRING_START_FROM_START"] = "взять подстроку с буквы №";
messages["TEXT_GET_SUBSTRING_TAIL"] = "";  // untranslated
messages["TEXT_GET_SUBSTRING_TOOLTIP"] = "Возвращает указанную часть текста.";
messages["TEXT_INDEXOF_HELPURL"] = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
messages["TEXT_INDEXOF_OPERATOR_FIRST"] = "найти первое вхождение текста";
messages["TEXT_INDEXOF_OPERATOR_LAST"] = "найти последнее вхождение текста";
messages["TEXT_INDEXOF_TITLE"] = "в тексте %1 %2 %3";
messages["TEXT_INDEXOF_TOOLTIP"] = "Возвращает номер позиции первого/последнего вхождения первого текста во  втором.  Возвращает %1, если текст не найден.";
messages["TEXT_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
messages["TEXT_ISEMPTY_TITLE"] = "%1 пуст";
messages["TEXT_ISEMPTY_TOOLTIP"] = "Возвращает значение истина, если предоставленный текст пуст.";
messages["TEXT_JOIN_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
messages["TEXT_JOIN_TITLE_CREATEWITH"] = "создать текст из";
messages["TEXT_JOIN_TOOLTIP"] = "Создаёт фрагмент текста, объединяя любое число элементов";
messages["TEXT_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
messages["TEXT_LENGTH_TITLE"] = "длина %1";
messages["TEXT_LENGTH_TOOLTIP"] = "Возвращает число символов (включая пробелы) в заданном тексте.";
messages["TEXT_PRINT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
messages["TEXT_PRINT_TITLE"] = "напечатать %1";
messages["TEXT_PRINT_TOOLTIP"] = "Печатает текст, число или другой объект.";
messages["TEXT_PROMPT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
messages["TEXT_PROMPT_TOOLTIP_NUMBER"] = "Запросить у пользователя число.";
messages["TEXT_PROMPT_TOOLTIP_TEXT"] = "Запросить у пользователя текст.";
messages["TEXT_PROMPT_TYPE_NUMBER"] = "запросить число с подсказкой";
messages["TEXT_PROMPT_TYPE_TEXT"] = "запросить текст с подсказкой";
messages["TEXT_REPLACE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#replacing-substrings";
messages["TEXT_REPLACE_MESSAGE0"] = "заменить %1 на %2 в %3";
messages["TEXT_REPLACE_TOOLTIP"] = "Заменить все вхождения некоторого текста другим текстом.";
messages["TEXT_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#reversing-text";
messages["TEXT_REVERSE_MESSAGE0"] = "изменить порядок на обратный %1";
messages["TEXT_REVERSE_TOOLTIP"] = "Меняет порядок символов в тексте на обратный.";
messages["TEXT_TEXT_HELPURL"] = "https://ru.wikipedia.org/wiki/Строковый_тип";
messages["TEXT_TEXT_TOOLTIP"] = "Буква, слово или строка текста.";
messages["TEXT_TRIM_HELPURL"] = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
messages["TEXT_TRIM_OPERATOR_BOTH"] = "обрезать пробелы с двух сторон";
messages["TEXT_TRIM_OPERATOR_LEFT"] = "обрезать пробелы слева";
messages["TEXT_TRIM_OPERATOR_RIGHT"] = "обрезать пробелы справа";
messages["TEXT_TRIM_TOOLTIP"] = "Возвращает копию текста с пробелами, удалёнными с одного или обоих концов.";
messages["TODAY"] = "Сегодня";
messages["UNDO"] = "Отменить";
messages["UNNAMED_KEY"] = "без названия";
messages["VARIABLES_DEFAULT_NAME"] = "элемент";
messages["VARIABLES_GET_CREATE_SET"] = "Создать блок \"присвоить\" для %1";
messages["VARIABLES_GET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
messages["VARIABLES_GET_TOOLTIP"] = "Возвращает значение этой переменной.";
messages["VARIABLES_SET"] = "присвоить %1 = %2";
messages["VARIABLES_SET_CREATE_GET"] = "Создать вставку %1";
messages["VARIABLES_SET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
messages["VARIABLES_SET_TOOLTIP"] = "Присваивает переменной значение вставки.";
messages["VARIABLE_ALREADY_EXISTS"] = "Переменная с именем '%1' уже существует.";
messages["VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE"] = "Название переменной '%1' уже используется другой типа: '%2'.";
messages["WORKSPACE_ARIA_LABEL"] = "Рабочая область Blockly";
messages["WORKSPACE_COMMENT_DEFAULT_TEXT"] = "Напишите здесь что-нибудь...";
messages["CONTROLS_FOREACH_INPUT_DO"] = messages["CONTROLS_REPEAT_INPUT_DO"];
messages["CONTROLS_FOR_INPUT_DO"] = messages["CONTROLS_REPEAT_INPUT_DO"];
messages["CONTROLS_IF_ELSEIF_TITLE_ELSEIF"] = messages["CONTROLS_IF_MSG_ELSEIF"];
messages["CONTROLS_IF_ELSE_TITLE_ELSE"] = messages["CONTROLS_IF_MSG_ELSE"];
messages["CONTROLS_IF_IF_TITLE_IF"] = messages["CONTROLS_IF_MSG_IF"];
messages["CONTROLS_IF_MSG_THEN"] = messages["CONTROLS_REPEAT_INPUT_DO"];
messages["CONTROLS_WHILEUNTIL_INPUT_DO"] = messages["CONTROLS_REPEAT_INPUT_DO"];
messages["LISTS_CREATE_WITH_ITEM_TITLE"] = messages["VARIABLES_DEFAULT_NAME"];
messages["LISTS_GET_INDEX_HELPURL"] = messages["LISTS_INDEX_OF_HELPURL"];
messages["LISTS_GET_INDEX_INPUT_IN_LIST"] = messages["LISTS_INLIST"];
messages["LISTS_GET_SUBLIST_INPUT_IN_LIST"] = messages["LISTS_INLIST"];
messages["LISTS_INDEX_OF_INPUT_IN_LIST"] = messages["LISTS_INLIST"];
messages["LISTS_SET_INDEX_INPUT_IN_LIST"] = messages["LISTS_INLIST"];
messages["MATH_CHANGE_TITLE_ITEM"] = messages["VARIABLES_DEFAULT_NAME"];
messages["PROCEDURES_DEFRETURN_COMMENT"] = messages["PROCEDURES_DEFNORETURN_COMMENT"];
messages["PROCEDURES_DEFRETURN_DO"] = messages["PROCEDURES_DEFNORETURN_DO"];
messages["PROCEDURES_DEFRETURN_PROCEDURE"] = messages["PROCEDURES_DEFNORETURN_PROCEDURE"];
messages["PROCEDURES_DEFRETURN_TITLE"] = messages["PROCEDURES_DEFNORETURN_TITLE"];
messages["TEXT_APPEND_VARIABLE"] = messages["VARIABLES_DEFAULT_NAME"];
messages["TEXT_CREATE_JOIN_ITEM_TITLE_ITEM"] = messages["VARIABLES_DEFAULT_NAME"];

messages["MATH_HUE"] = "230";
messages["LOOPS_HUE"] = "120";
messages["LISTS_HUE"] = "260";
messages["LOGIC_HUE"] = "210";
messages["VARIABLES_HUE"] = "330";
messages["TEXTS_HUE"] = "160";
messages["PROCEDURES_HUE"] = "290";
messages["COLOUR_HUE"] = "20";
messages["VARIABLES_DYNAMIC_HUE"] = "310";