// This file was automatically generated.  Do not modify.

'use strict';

const messages = Object.create(null);

messages["ADD_COMMENT"] = "Dodaj Komentarz";
messages["CANNOT_DELETE_VARIABLE_PROCEDURE"] = "Nie można usunąć zmiennej '%1', ponieważ jest częścią definicji funkcji '%2'";
messages["CHANGE_VALUE_TITLE"] = "Zmień wartość:";
messages["CLEAN_UP"] = "Uporządkuj Bloki";
messages["COLLAPSED_WARNINGS_WARNING"] = "Zwinięte bloki zawierają ostrzeżenia.";
messages["COLLAPSE_ALL"] = "Zwiń Bloki";
messages["COLLAPSE_BLOCK"] = "Zwiń Klocek";
messages["COLOUR_BLEND_COLOUR1"] = "kolor 1";
messages["COLOUR_BLEND_COLOUR2"] = "kolor 2";
messages["COLOUR_BLEND_HELPURL"] = "http://meyerweb.com/eric/tools/color-blend/";
messages["COLOUR_BLEND_RATIO"] = "proporcja";
messages["COLOUR_BLEND_TITLE"] = "wymieszaj";
messages["COLOUR_BLEND_TOOLTIP"] = "Miesza dwa kolory w danej proporcji (0.0 - 1.0).";
messages["COLOUR_PICKER_HELPURL"] = "https://en.wikipedia.org/wiki/Color";
messages["COLOUR_PICKER_TOOLTIP"] = "Wybierz kolor z palety.";
messages["COLOUR_RANDOM_HELPURL"] = "http://randomcolour.com";  // untranslated
messages["COLOUR_RANDOM_TITLE"] = "losowy kolor";
messages["COLOUR_RANDOM_TOOLTIP"] = "Wybierz kolor w sposób losowy.";
messages["COLOUR_RGB_BLUE"] = "niebieski";
messages["COLOUR_RGB_GREEN"] = "zielony";
messages["COLOUR_RGB_HELPURL"] = "http://www.december.com/html/spec/colorper.html";
messages["COLOUR_RGB_RED"] = "czerwony";
messages["COLOUR_RGB_TITLE"] = "kolor z";
messages["COLOUR_RGB_TOOLTIP"] = "Utwórz kolor składający sie z podanej ilości czerwieni, zieleni i błękitu. Zakres wartości: 0 do 100.";
messages["CONTROLS_FLOW_STATEMENTS_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
messages["CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK"] = "przerwij pętlę";
messages["CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE"] = "przejdź do kolejnej iteracji pętli";
messages["CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK"] = "Przerwij działanie pętli.";
messages["CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE"] = "Pomiń resztę pętli i kontynuuj w kolejnej iteracji.";
messages["CONTROLS_FLOW_STATEMENTS_WARNING"] = "Uwaga: Ten klocek może być użyty tylko wewnątrz pętli.";
messages["CONTROLS_FOREACH_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
messages["CONTROLS_FOREACH_TITLE"] = "dla każdego elementu %1 listy %2";
messages["CONTROLS_FOREACH_TOOLTIP"] = "Przypisz zmiennej '%1' kolejno wartość każdego elementu listy, a następnie wykonaj kilka instrukcji.";
messages["CONTROLS_FOR_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
messages["CONTROLS_FOR_TITLE"] = "licz z %1 od %2 do %3 co %4 (wartość kroku)";
messages["CONTROLS_FOR_TOOLTIP"] = "Zmiennej '%1' przypisuje wartości z podanego zakresu z podanym interwałem i wykonuje zadane bloki.";
messages["CONTROLS_IF_ELSEIF_TOOLTIP"] = "Dodaj warunek do klocka „jeśli”.";
messages["CONTROLS_IF_ELSE_TOOLTIP"] = "Dodaj ostatni zawsze prawdziwy warunek do klocka „jeśli”.";
messages["CONTROLS_IF_HELPURL"] = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
messages["CONTROLS_IF_IF_TOOLTIP"] = "Dodaj, usuń lub zmień kolejność czynności, żeby zmodyfikować ten klocek „jeśli”.";
messages["CONTROLS_IF_MSG_ELSE"] = "w przeciwnym razie";
messages["CONTROLS_IF_MSG_ELSEIF"] = "w przeciwnym razie, jeśli";
messages["CONTROLS_IF_MSG_IF"] = "jeśli";
messages["CONTROLS_IF_TOOLTIP_1"] = "Jeśli warunek jest spełniony, wykonaj zadane czynności.";
messages["CONTROLS_IF_TOOLTIP_2"] = "Jeśli warunek jest spełniony, wykonaj pierwszy blok instrukcji.  W przeciwnym razie, wykonaj drugi blok instrukcji.";
messages["CONTROLS_IF_TOOLTIP_3"] = "Jeśli pierwszy warunek jest spełniony, wykonaj pierwszy blok instrukcji.  W przeciwnym razie, jeśli drugi warunek jest spełniony, wykonaj drugi blok instrukcji.";
messages["CONTROLS_IF_TOOLTIP_4"] = "Jeśli pierwszy warunek jest spełniony, wykonaj pierwszy blok czynności.  W przeciwnym razie jeśli drugi warunek jest spełniony, wykonaj drugi blok czynności.  Jeżeli żaden z warunków nie zostanie spełniony, wykonaj ostatni blok czynności.";
messages["CONTROLS_REPEAT_HELPURL"] = "https://en.wikipedia.org/wiki/For_loop";
messages["CONTROLS_REPEAT_INPUT_DO"] = "wykonaj";
messages["CONTROLS_REPEAT_TITLE"] = "powtórz %1 razy";
messages["CONTROLS_REPEAT_TOOLTIP"] = "Wykonaj niektóre instrukcje kilka razy.";
messages["CONTROLS_WHILEUNTIL_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
messages["CONTROLS_WHILEUNTIL_OPERATOR_UNTIL"] = "powtarzaj aż do";
messages["CONTROLS_WHILEUNTIL_OPERATOR_WHILE"] = "powtarzaj dopóki";
messages["CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL"] = "Dopóki wyrażenie jest nieprawdziwe, wykonaj zadane czynności.";
messages["CONTROLS_WHILEUNTIL_TOOLTIP_WHILE"] = "Dopóki wyrażenie jest prawdziwe, wykonaj zadane czynności.";
messages["DELETE_ALL_BLOCKS"] = "Usunąć wszystkie klocki z %1?";
messages["DELETE_BLOCK"] = "Usuń Klocek";
messages["DELETE_VARIABLE"] = "Usuń zmienną '%1'";
messages["DELETE_VARIABLE_CONFIRMATION"] = "Usunąć %1 wystąpień zmiennej '%2'?";
messages["DELETE_X_BLOCKS"] = "Usuń %1 Bloki(ów)";
messages["DIALOG_CANCEL"] = "Anuluj";
messages["DIALOG_OK"] = "OK";
messages["DISABLE_BLOCK"] = "Wyłącz Klocek";
messages["DUPLICATE_BLOCK"] = "Powiel";
messages["DUPLICATE_COMMENT"] = "Zduplikowany komentarz";
messages["ENABLE_BLOCK"] = "Włącz Blok";
messages["EXPAND_ALL"] = "Rozwiń Bloki";
messages["EXPAND_BLOCK"] = "Rozwiń Klocek";
messages["EXTERNAL_INPUTS"] = "Zewnętrzne Wejścia";
messages["HELP"] = "Pomoc";
messages["INLINE_INPUTS"] = "Wbudowane Wejścia";
messages["LISTS_CREATE_EMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-empty-list";
messages["LISTS_CREATE_EMPTY_TITLE"] = "utwórz pustą listę";
messages["LISTS_CREATE_EMPTY_TOOLTIP"] = "Zwraca listę o długości 0, nie zawierającą danych";
messages["LISTS_CREATE_WITH_CONTAINER_TITLE_ADD"] = "lista";
messages["LISTS_CREATE_WITH_CONTAINER_TOOLTIP"] = "Dodaj, usuń lub zmień kolejność sekcji aby przekonfigurować blok tej listy.";
messages["LISTS_CREATE_WITH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
messages["LISTS_CREATE_WITH_INPUT_WITH"] = "utwórz listę z";
messages["LISTS_CREATE_WITH_ITEM_TOOLTIP"] = "Dodaj element do listy.";
messages["LISTS_CREATE_WITH_TOOLTIP"] = "Utwórz listę z dowolną ilością elementów.";
messages["LISTS_GET_INDEX_FIRST"] = "pierwszy";
messages["LISTS_GET_INDEX_FROM_END"] = "# od końca";
messages["LISTS_GET_INDEX_FROM_START"] = "#";
messages["LISTS_GET_INDEX_GET"] = "pobierz";
messages["LISTS_GET_INDEX_GET_REMOVE"] = "zabierz";
messages["LISTS_GET_INDEX_LAST"] = "ostatni";
messages["LISTS_GET_INDEX_RANDOM"] = "losowy";
messages["LISTS_GET_INDEX_REMOVE"] = "usuń";
messages["LISTS_GET_INDEX_TAIL"] = "";  // untranslated
messages["LISTS_GET_INDEX_TOOLTIP_GET_FIRST"] = "Zwraca pierwszy element z listy.";
messages["LISTS_GET_INDEX_TOOLTIP_GET_FROM"] = "Zwraca element z konkretnej pozycji na liście.";
messages["LISTS_GET_INDEX_TOOLTIP_GET_LAST"] = "Zwraca ostatni element z listy.";
messages["LISTS_GET_INDEX_TOOLTIP_GET_RANDOM"] = "Zwraca losowy element z listy.";
messages["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST"] = "Usuwa i zwraca pierwszy element z listy.";
messages["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM"] = "Usuwa i zwraca element z określonej pozycji na liście.";
messages["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST"] = "Usuwa i zwraca ostatni element z listy.";
messages["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM"] = "Usuwa i zwraca losowy element z listy.";
messages["LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST"] = "Usuwa pierwszy element z listy.";
messages["LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM"] = "Usuwa element z określonej pozycji na liście.";
messages["LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST"] = "Usuwa ostatni element z listy.";
messages["LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM"] = "Usuwa losowy element z listy.";
messages["LISTS_GET_SUBLIST_END_FROM_END"] = "do # od końca";
messages["LISTS_GET_SUBLIST_END_FROM_START"] = "do #";
messages["LISTS_GET_SUBLIST_END_LAST"] = "do ostatniego";
messages["LISTS_GET_SUBLIST_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
messages["LISTS_GET_SUBLIST_START_FIRST"] = "utwórz listę podrzędną od pierwszego";
messages["LISTS_GET_SUBLIST_START_FROM_END"] = "utwórz listę podrzędną z # od końca";
messages["LISTS_GET_SUBLIST_START_FROM_START"] = "utwórz listę podrzędną z #";
messages["LISTS_GET_SUBLIST_TAIL"] = "";
messages["LISTS_GET_SUBLIST_TOOLTIP"] = "Tworzy kopię żądanej części listy.";
messages["LISTS_INDEX_FROM_END_TOOLTIP"] = "%1 to ostatni element.";
messages["LISTS_INDEX_FROM_START_TOOLTIP"] = "%1 to pierwszy element.";
messages["LISTS_INDEX_OF_FIRST"] = "znajdź pierwsze wystąpienie elementu";
messages["LISTS_INDEX_OF_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
messages["LISTS_INDEX_OF_LAST"] = "znajdź ostatanie wystąpienie elementu";
messages["LISTS_INDEX_OF_TOOLTIP"] = "Zwraca indeks pierwszego/ostatniego wystąpienia elementu z listy. Zwraca %1, jeśli nie zostanie znaleziony.";
messages["LISTS_INLIST"] = "na liście";
messages["LISTS_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
messages["LISTS_ISEMPTY_TITLE"] = "%1 jest pusta";
messages["LISTS_ISEMPTY_TOOLTIP"] = "Zwraca \"prawda\" jeśli lista jest pusta.";
messages["LISTS_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
messages["LISTS_LENGTH_TITLE"] = "długość %1";
messages["LISTS_LENGTH_TOOLTIP"] = "Zwraca długość listy.";
messages["LISTS_REPEAT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
messages["LISTS_REPEAT_TITLE"] = "utwórz listę powtarzając %1 %2 razy.";
messages["LISTS_REPEAT_TOOLTIP"] = "Tworzy listę zawierającą podaną wartość powtórzoną żądaną ilość razy.";
messages["LISTS_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#reversing-a-list";  // untranslated
messages["LISTS_REVERSE_MESSAGE0"] = "odwróć %1";
messages["LISTS_REVERSE_TOOLTIP"] = "Odwraca kolejność danych w kopii listy.";
messages["LISTS_SET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
messages["LISTS_SET_INDEX_INPUT_TO"] = "jako";
messages["LISTS_SET_INDEX_INSERT"] = "wstaw w";
messages["LISTS_SET_INDEX_SET"] = "ustaw";
messages["LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST"] = "Wstawia element na początku listy.";
messages["LISTS_SET_INDEX_TOOLTIP_INSERT_FROM"] = "Wstawia element na żądanej pozycji listy.";
messages["LISTS_SET_INDEX_TOOLTIP_INSERT_LAST"] = "Dodaj element na koniec listy.";
messages["LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM"] = "Wstawia element w losowym miejscu na liście.";
messages["LISTS_SET_INDEX_TOOLTIP_SET_FIRST"] = "Ustawia pierwszy element na liście.";
messages["LISTS_SET_INDEX_TOOLTIP_SET_FROM"] = "Ustawia element w określonym miejscu na liście.";
messages["LISTS_SET_INDEX_TOOLTIP_SET_LAST"] = "Ustawia ostatni element na liście.";
messages["LISTS_SET_INDEX_TOOLTIP_SET_RANDOM"] = "Ustawia losowy element na liście.";
messages["LISTS_SORT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";
messages["LISTS_SORT_ORDER_ASCENDING"] = "rosnąco";
messages["LISTS_SORT_ORDER_DESCENDING"] = "malejąco";
messages["LISTS_SORT_TITLE"] = "sortuj %1 %2 %3";
messages["LISTS_SORT_TOOLTIP"] = "Sortuj kopię listy.";
messages["LISTS_SORT_TYPE_IGNORECASE"] = "alfabetycznie, ignoruj wielkość liter";
messages["LISTS_SORT_TYPE_NUMERIC"] = "numerycznie";
messages["LISTS_SORT_TYPE_TEXT"] = "alfabetycznie";
messages["LISTS_SPLIT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated
messages["LISTS_SPLIT_LIST_FROM_TEXT"] = "utwórz listę z tekstu";
messages["LISTS_SPLIT_TEXT_FROM_LIST"] = "utwórz tekst z listy";
messages["LISTS_SPLIT_TOOLTIP_JOIN"] = "Łączy listę tekstów w jeden tekst, rozdzielany separatorem.";
messages["LISTS_SPLIT_TOOLTIP_SPLIT"] = "Rozdziela tekst zgodnie z separatorem tworząc listę z powstałych elementów.";
messages["LISTS_SPLIT_WITH_DELIMITER"] = "z separatorem";
messages["LOGIC_BOOLEAN_FALSE"] = "fałsz";
messages["LOGIC_BOOLEAN_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
messages["LOGIC_BOOLEAN_TOOLTIP"] = "Zwraca 'prawda' lub 'fałsz'.";
messages["LOGIC_BOOLEAN_TRUE"] = "prawda";
messages["LOGIC_COMPARE_HELPURL"] = "https://pl.wikipedia.org/wiki/Nierówność";
messages["LOGIC_COMPARE_TOOLTIP_EQ"] = "Zwraca \"prawda\", jeśli wejścia są identyczne.";
messages["LOGIC_COMPARE_TOOLTIP_GT"] = "Zwraca \"prawda\" jeśli pierwsze wejście jest większe od drugiego.";
messages["LOGIC_COMPARE_TOOLTIP_GTE"] = "Zwraca \"prawda\", jeśli pierwsze wejście jest większe lub równe drugiemu.";
messages["LOGIC_COMPARE_TOOLTIP_LT"] = "Zwraca \"prawda\" jeśli pierwsze wejście jest mniejsze od drugiego.";
messages["LOGIC_COMPARE_TOOLTIP_LTE"] = "Zwraca \"prawda\", jeśli pierwsze wejście jest mniejsze lub równe drugiemu.";
messages["LOGIC_COMPARE_TOOLTIP_NEQ"] = "Zwraca \"prawda\", jeśli wejścia nie są identyczne.";
messages["LOGIC_NEGATE_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
messages["LOGIC_NEGATE_TITLE"] = "nie %1";
messages["LOGIC_NEGATE_TOOLTIP"] = "Zwraca \"prawda\", jeśli wejściu jest \"fałsz\". Zwraca \"fałsz\", jeśli na wejściu jest \"prawda\".";
messages["LOGIC_NULL"] = "nic";
messages["LOGIC_NULL_HELPURL"] = "https://en.wikipedia.org/wiki/Nullable_type";
messages["LOGIC_NULL_TOOLTIP"] = "Zwraca nic.";
messages["LOGIC_OPERATION_AND"] = "i";
messages["LOGIC_OPERATION_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
messages["LOGIC_OPERATION_OR"] = "lub";
messages["LOGIC_OPERATION_TOOLTIP_AND"] = "Zwraca \"prawda\" jeśli na obydwóch wejściach jest \"prawda\".";
messages["LOGIC_OPERATION_TOOLTIP_OR"] = "Zwraca \"prawda\" jeśli co najmniej na jednyk wejściu jest \"prawda\".";
messages["LOGIC_TERNARY_CONDITION"] = "test";
messages["LOGIC_TERNARY_HELPURL"] = "https://en.wikipedia.org/wiki/%3F:";
messages["LOGIC_TERNARY_IF_FALSE"] = "jeśli fałsz";
messages["LOGIC_TERNARY_IF_TRUE"] = "jeśli prawda";
messages["LOGIC_TERNARY_TOOLTIP"] = "Sprawdź warunek w „test”. Jeśli warunek jest prawdziwy, to zwróci „jeśli prawda”; jeśli nie jest prawdziwy to zwróci „jeśli fałsz”.";
messages["MATH_ADDITION_SYMBOL"] = "+";
messages["MATH_ARITHMETIC_HELPURL"] = "https://pl.wikipedia.org/wiki/Arytmetyka";
messages["MATH_ARITHMETIC_TOOLTIP_ADD"] = "Zwróć sumę dwóch liczb.";
messages["MATH_ARITHMETIC_TOOLTIP_DIVIDE"] = "Zwróć iloraz dwóch liczb.";
messages["MATH_ARITHMETIC_TOOLTIP_MINUS"] = "Zwróć różnicę dwóch liczb.";
messages["MATH_ARITHMETIC_TOOLTIP_MULTIPLY"] = "Zwróć iloczyn dwóch liczb.";
messages["MATH_ARITHMETIC_TOOLTIP_POWER"] = "Zwróć pierwszą liczbę podniesioną do potęgi o wykładniku drugiej liczby.";
messages["MATH_ATAN2_HELPURL"] = "https://en.wikipedia.org/wiki/Atan2";
messages["MATH_ATAN2_TITLE"] = "atan2 of X:%1 Y:%2";  // untranslated
messages["MATH_ATAN2_TOOLTIP"] = "Zwraca arcus tangens punktu (X, Y) w stopniach od -180 do 180.";
messages["MATH_CHANGE_HELPURL"] = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
messages["MATH_CHANGE_TITLE"] = "zmień %1 o %2";
messages["MATH_CHANGE_TOOLTIP"] = "Dodaj liczbę do zmiennej '%1'.";
messages["MATH_CONSTANT_HELPURL"] = "https://pl.wikipedia.org/wiki/Stała_(matematyka)";
messages["MATH_CONSTANT_TOOLTIP"] = "Zwróć jedną wspólną stałą: π (3.141), e (2.718...), φ (1.618...), sqrt(2) (1.414...), sqrt(½) (0.707...) lub ∞ (nieskończoność).";
messages["MATH_CONSTRAIN_HELPURL"] = "https://en.wikipedia.org/wiki/Clamping_(graphics)";  // untranslated
messages["MATH_CONSTRAIN_TITLE"] = "ogranicz %1 z dołu %2 z góry %3";
messages["MATH_CONSTRAIN_TOOLTIP"] = "Ogranicz liczbę, aby była w określonych granicach (włącznie).";
messages["MATH_DIVISION_SYMBOL"] = "/";
messages["MATH_IS_DIVISIBLE_BY"] = "jest podzielna przez";
messages["MATH_IS_EVEN"] = "jest parzysta";
messages["MATH_IS_NEGATIVE"] = "jest ujemna";
messages["MATH_IS_ODD"] = "jest nieparzysta";
messages["MATH_IS_POSITIVE"] = "jest dodatnia";
messages["MATH_IS_PRIME"] = "jest liczbą pierwszą";
messages["MATH_IS_TOOLTIP"] = "Sprawdź, czy liczba jest parzysta, nieparzysta, pierwsza, całkowita, dodatnia, ujemna, lub czy jest podzielna przez podaną liczbę. Zwraca wartość \"prawda\" lub \"fałsz\".";
messages["MATH_IS_WHOLE"] = "jest liczbą całkowitą";
messages["MATH_MODULO_HELPURL"] = "https://pl.wikipedia.org/wiki/Modulo";
messages["MATH_MODULO_TITLE"] = "reszta z dzielenia %1 przez %2";
messages["MATH_MODULO_TOOLTIP"] = "Zwróć resztę z dzielenia dwóch liczb przez siebie.";
messages["MATH_MULTIPLICATION_SYMBOL"] = "×";
messages["MATH_NUMBER_HELPURL"] = "https://en.wikipedia.org/wiki/Number";
messages["MATH_NUMBER_TOOLTIP"] = "Liczba.";
messages["MATH_ONLIST_HELPURL"] = "";
messages["MATH_ONLIST_OPERATOR_AVERAGE"] = "średnia elementów listy";
messages["MATH_ONLIST_OPERATOR_MAX"] = "maksymalna wartość z listy";
messages["MATH_ONLIST_OPERATOR_MEDIAN"] = "mediana listy";
messages["MATH_ONLIST_OPERATOR_MIN"] = "minimalna wartość z listy";
messages["MATH_ONLIST_OPERATOR_MODE"] = "dominanty listy";
messages["MATH_ONLIST_OPERATOR_RANDOM"] = "losowy element z listy";
messages["MATH_ONLIST_OPERATOR_STD_DEV"] = "odchylenie standardowe listy";
messages["MATH_ONLIST_OPERATOR_SUM"] = "suma elementów listy";
messages["MATH_ONLIST_TOOLTIP_AVERAGE"] = "Zwróć średnią (średnią arytmetyczną) wartości liczbowych z listy.";
messages["MATH_ONLIST_TOOLTIP_MAX"] = "Zwróć największą liczbę w liście.";
messages["MATH_ONLIST_TOOLTIP_MEDIAN"] = "Zwróć medianę listy.";
messages["MATH_ONLIST_TOOLTIP_MIN"] = "Zwróć najmniejszą liczbę w liście.";
messages["MATH_ONLIST_TOOLTIP_MODE"] = "Zwróć listę najczęściej występujących elementów w liście.";
messages["MATH_ONLIST_TOOLTIP_RANDOM"] = "Zwróć losowy element z listy.";
messages["MATH_ONLIST_TOOLTIP_STD_DEV"] = "Zwróć odchylenie standardowe listy.";
messages["MATH_ONLIST_TOOLTIP_SUM"] = "Zwróć sumę wszystkich liczb z listy.";
messages["MATH_POWER_SYMBOL"] = "^";
messages["MATH_RANDOM_FLOAT_HELPURL"] = "https://en.wikipedia.org/wiki/Random_number_generation";
messages["MATH_RANDOM_FLOAT_TITLE_RANDOM"] = "losowy ułamek";
messages["MATH_RANDOM_FLOAT_TOOLTIP"] = "Zwróć losowy ułamek między 0.0 (włącznie), a 1.0 (wyłącznie).";
messages["MATH_RANDOM_INT_HELPURL"] = "https://en.wikipedia.org/wiki/Random_number_generation";
messages["MATH_RANDOM_INT_TITLE"] = "losowa liczba całkowita od %1 do %2";
messages["MATH_RANDOM_INT_TOOLTIP"] = "Zwróć losową liczbę całkowitą w ramach dwóch wyznaczonych granic, włącznie.";
messages["MATH_ROUND_HELPURL"] = "https://pl.wikipedia.org/wiki/Zaokrąglanie";
messages["MATH_ROUND_OPERATOR_ROUND"] = "zaokrąglij";
messages["MATH_ROUND_OPERATOR_ROUNDDOWN"] = "zaokrąglij w dół";
messages["MATH_ROUND_OPERATOR_ROUNDUP"] = "zaokrąglij w górę";
messages["MATH_ROUND_TOOLTIP"] = "Zaokrąglij w górę lub w dół.";
messages["MATH_SINGLE_HELPURL"] = "https://pl.wikipedia.org/wiki/Pierwiastek_kwadratowy";
messages["MATH_SINGLE_OP_ABSOLUTE"] = "wartość bezwzględna";
messages["MATH_SINGLE_OP_ROOT"] = "pierwiastek kwadratowy";
messages["MATH_SINGLE_TOOLTIP_ABS"] = "Zwróć wartość bezwzględną danej liczby.";
messages["MATH_SINGLE_TOOLTIP_EXP"] = "Zwróć e do potęgi danej liczby.";
messages["MATH_SINGLE_TOOLTIP_LN"] = "Zwróć logarytm naturalny danej liczby.";
messages["MATH_SINGLE_TOOLTIP_LOG10"] = "Zwraca logarytm dziesiętny danej liczby.";
messages["MATH_SINGLE_TOOLTIP_NEG"] = "Zwróć negację danej liczby.";
messages["MATH_SINGLE_TOOLTIP_POW10"] = "Zwróć 10 do potęgi danej liczby.";
messages["MATH_SINGLE_TOOLTIP_ROOT"] = "Zwróć pierwiastek kwadratowy danej liczby.";
messages["MATH_SUBTRACTION_SYMBOL"] = "-";
messages["MATH_TRIG_ACOS"] = "arccos";
messages["MATH_TRIG_ASIN"] = "arcsin";
messages["MATH_TRIG_ATAN"] = "arctg";
messages["MATH_TRIG_COS"] = "cos";
messages["MATH_TRIG_HELPURL"] = "https://pl.wikipedia.org/wiki/Funkcje_trygonometryczne";
messages["MATH_TRIG_SIN"] = "sin";
messages["MATH_TRIG_TAN"] = "tg";
messages["MATH_TRIG_TOOLTIP_ACOS"] = "Zwróć arcus cosinus danej liczby.";
messages["MATH_TRIG_TOOLTIP_ASIN"] = "Zwróć arcus sinus danej liczby.";
messages["MATH_TRIG_TOOLTIP_ATAN"] = "Zwróć arcus tangens danej liczby.";
messages["MATH_TRIG_TOOLTIP_COS"] = "Zwróć wartość cosinusa o stopniu (nie w radianach).";
messages["MATH_TRIG_TOOLTIP_SIN"] = "Zwróć wartość sinusa o stopniu (nie w radianach).";
messages["MATH_TRIG_TOOLTIP_TAN"] = "Zwróć tangens o stopniu (nie w radianach).";
messages["NEW_COLOUR_VARIABLE"] = "Utwórz zmienną colour";
messages["NEW_NUMBER_VARIABLE"] = "Utwórz zmienną typu number";
messages["NEW_STRING_VARIABLE"] = "Utwórz zmienną typu string";
messages["NEW_VARIABLE"] = "Utwórz zmienną...";
messages["NEW_VARIABLE_TITLE"] = "Nowa nazwa zmiennej:";
messages["NEW_VARIABLE_TYPE_TITLE"] = "Nowy typ zmiennej:";
messages["ORDINAL_NUMBER_SUFFIX"] = "";
messages["PROCEDURES_ALLOW_STATEMENTS"] = "zezwól na czynności";
messages["PROCEDURES_BEFORE_PARAMS"] = "z:";
messages["PROCEDURES_CALLNORETURN_HELPURL"] = "https://pl.wikipedia.org/wiki/Podprogram";
messages["PROCEDURES_CALLNORETURN_TOOLTIP"] = "Uruchom zdefiniowaną przez użytkownika funkcję '%1'.";
messages["PROCEDURES_CALLRETURN_HELPURL"] = "https://pl.wikipedia.org/wiki/Podprogram";
messages["PROCEDURES_CALLRETURN_TOOLTIP"] = "Uruchom zdefiniowaną przez użytkownika funkcję '%1' i użyj jej wyjścia.";
messages["PROCEDURES_CALL_BEFORE_PARAMS"] = "z:";
messages["PROCEDURES_CREATE_DO"] = "Utwórz '%1'";
messages["PROCEDURES_DEFNORETURN_COMMENT"] = "Opisz tę funkcję...";
messages["PROCEDURES_DEFNORETURN_DO"] = "";
messages["PROCEDURES_DEFNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
messages["PROCEDURES_DEFNORETURN_PROCEDURE"] = "zrób coś";
messages["PROCEDURES_DEFNORETURN_TITLE"] = "do";
messages["PROCEDURES_DEFNORETURN_TOOLTIP"] = "Tworzy funkcję nie posiadającą wyjścia.";
messages["PROCEDURES_DEFRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
messages["PROCEDURES_DEFRETURN_RETURN"] = "zwróć";
messages["PROCEDURES_DEFRETURN_TOOLTIP"] = "Tworzy funkcję posiadającą wyjście.";
messages["PROCEDURES_DEF_DUPLICATE_WARNING"] = "Uwaga: Ta funkcja ma powtórzone parametry.";
messages["PROCEDURES_HIGHLIGHT_DEF"] = "Podświetl definicję funkcji";
messages["PROCEDURES_IFRETURN_HELPURL"] = "http://c2.com/cgi/wiki?GuardClause";  // untranslated
messages["PROCEDURES_IFRETURN_TOOLTIP"] = "Jeśli warunek jest spełniony zwróć drugą wartość.";
messages["PROCEDURES_IFRETURN_WARNING"] = "Uwaga: Ten klocek może być używany tylko w definicji funkcji.";
messages["PROCEDURES_MUTATORARG_TITLE"] = "nazwa wejścia:";
messages["PROCEDURES_MUTATORARG_TOOLTIP"] = "Dodaj wejście do funkcji.";
messages["PROCEDURES_MUTATORCONTAINER_TITLE"] = "wejścia";
messages["PROCEDURES_MUTATORCONTAINER_TOOLTIP"] = "Dodaj, usuń lub zmień kolejność wejść tej funkcji.";
messages["REDO"] = "Ponów";
messages["REMOVE_COMMENT"] = "Usuń komentarz";
messages["RENAME_VARIABLE"] = "Zmień nazwę zmiennej...";
messages["RENAME_VARIABLE_TITLE"] = "Zmień nazwy wszystkich '%1' zmiennych na:";
messages["TEXT_APPEND_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
messages["TEXT_APPEND_TITLE"] = "dodaj tekst %2 do %1";
messages["TEXT_APPEND_TOOLTIP"] = "Dołącz tekst do zmiennej '%1'.";
messages["TEXT_CHANGECASE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
messages["TEXT_CHANGECASE_OPERATOR_LOWERCASE"] = "na małe litery";
messages["TEXT_CHANGECASE_OPERATOR_TITLECASE"] = "na Pierwsza Duża";
messages["TEXT_CHANGECASE_OPERATOR_UPPERCASE"] = "na WIELKIE LITERY";
messages["TEXT_CHANGECASE_TOOLTIP"] = "Zwraca kopię tekstu z odwruconą wielkością liter.";
messages["TEXT_CHARAT_FIRST"] = "pobierz pierwszą literę";
messages["TEXT_CHARAT_FROM_END"] = "pobierz literę # od końca";
messages["TEXT_CHARAT_FROM_START"] = "pobierz literę #";
messages["TEXT_CHARAT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
messages["TEXT_CHARAT_LAST"] = "pobierz ostatnią literę";
messages["TEXT_CHARAT_RANDOM"] = "pobierz losową literę";
messages["TEXT_CHARAT_TAIL"] = "";
messages["TEXT_CHARAT_TITLE"] = "w tekście %1 %2";
messages["TEXT_CHARAT_TOOLTIP"] = "Zwraca literę z określonej pozycji.";
messages["TEXT_COUNT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#counting-substrings";
messages["TEXT_COUNT_MESSAGE0"] = "policz %1 w %2";
messages["TEXT_COUNT_TOOLTIP"] = "Liczy ile razy dany tekst występuje w innym tekście.";
messages["TEXT_CREATE_JOIN_ITEM_TOOLTIP"] = "Dodaj element do tekstu.";
messages["TEXT_CREATE_JOIN_TITLE_JOIN"] = "połącz";
messages["TEXT_CREATE_JOIN_TOOLTIP"] = "Dodaj, usuń lub zmień kolejność sekcji, aby zmodyfikować klocek tekstowy.";
messages["TEXT_GET_SUBSTRING_END_FROM_END"] = "do # litery od końca";
messages["TEXT_GET_SUBSTRING_END_FROM_START"] = "do # litery";
messages["TEXT_GET_SUBSTRING_END_LAST"] = "do ostatniej litery";
messages["TEXT_GET_SUBSTRING_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
messages["TEXT_GET_SUBSTRING_INPUT_IN_TEXT"] = "w tekście";
messages["TEXT_GET_SUBSTRING_START_FIRST"] = "pobierz podciąg od pierwszej litery";
messages["TEXT_GET_SUBSTRING_START_FROM_END"] = "pobierz podciąg od # litery od końca";
messages["TEXT_GET_SUBSTRING_START_FROM_START"] = "pobierz podciąg od # litery";
messages["TEXT_GET_SUBSTRING_TAIL"] = "";
messages["TEXT_GET_SUBSTRING_TOOLTIP"] = "Zwraca określoną część tekstu.";
messages["TEXT_INDEXOF_HELPURL"] = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
messages["TEXT_INDEXOF_OPERATOR_FIRST"] = "znajdź pierwsze wystąpienie tekstu";
messages["TEXT_INDEXOF_OPERATOR_LAST"] = "znajdź ostatnie wystąpienie tekstu";
messages["TEXT_INDEXOF_TITLE"] = "w tekście %1 %2 %3";
messages["TEXT_INDEXOF_TOOLTIP"] = "Zwraca indeks pierwszego/ostatniego wystąpienia pierwszego tekstu w drugim tekście. Zwraca wartość %1, jeśli tekst nie został znaleziony.";
messages["TEXT_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
messages["TEXT_ISEMPTY_TITLE"] = "%1 jest pusty";
messages["TEXT_ISEMPTY_TOOLTIP"] = "Zwraca prawda (true), jeśli podany tekst jest pusty.";
messages["TEXT_JOIN_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
messages["TEXT_JOIN_TITLE_CREATEWITH"] = "utwórz tekst z";
messages["TEXT_JOIN_TOOLTIP"] = "Tworzy fragment tekstu, łącząc ze sobą dowolną liczbę tekstów.";
messages["TEXT_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
messages["TEXT_LENGTH_TITLE"] = "długość %1";
messages["TEXT_LENGTH_TOOLTIP"] = "Zwraca liczbę liter (łącznie ze spacjami) w podanym tekście.";
messages["TEXT_PRINT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
messages["TEXT_PRINT_TITLE"] = "wydrukuj %1";
messages["TEXT_PRINT_TOOLTIP"] = "Wyświetl określony tekst, liczbę lub inną wartość.";
messages["TEXT_PROMPT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
messages["TEXT_PROMPT_TOOLTIP_NUMBER"] = "Zapytaj użytkownika  o liczbę.";
messages["TEXT_PROMPT_TOOLTIP_TEXT"] = "Zapytaj użytkownika o jakiś tekst.";
messages["TEXT_PROMPT_TYPE_NUMBER"] = "poproś o liczbę z tą wiadomością";
messages["TEXT_PROMPT_TYPE_TEXT"] = "poproś o tekst z tą wiadomością";
messages["TEXT_REPLACE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#replacing-substrings";  // untranslated
messages["TEXT_REPLACE_MESSAGE0"] = "zamień %1 na %2 w %3";
messages["TEXT_REPLACE_TOOLTIP"] = "Zastąp wszystkie wystąpienia danego tekstu innym.";
messages["TEXT_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#reversing-text";
messages["TEXT_REVERSE_MESSAGE0"] = "odwróć %1";
messages["TEXT_REVERSE_TOOLTIP"] = "Odwraca kolejność znaków w tekście.";
messages["TEXT_TEXT_HELPURL"] = "https://pl.wikipedia.org/wiki/Tekstowy_typ_danych";
messages["TEXT_TEXT_TOOLTIP"] = "Litera, wyraz lub linia tekstu.";
messages["TEXT_TRIM_HELPURL"] = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
messages["TEXT_TRIM_OPERATOR_BOTH"] = "usuń spacje po obu stronach";
messages["TEXT_TRIM_OPERATOR_LEFT"] = "usuń spacje z lewej strony";
messages["TEXT_TRIM_OPERATOR_RIGHT"] = "usuń spacje z prawej strony";
messages["TEXT_TRIM_TOOLTIP"] = "Zwraca kopię tekstu z usuniętymi spacjami z jednego lub z obu końców tekstu.";
messages["TODAY"] = "Dzisiaj";
messages["UNDO"] = "Cofnij";
messages["UNNAMED_KEY"] = "bez nazwy";
messages["VARIABLES_DEFAULT_NAME"] = "element";
messages["VARIABLES_GET_CREATE_SET"] = "Utwórz klocek 'ustaw %1'";
messages["VARIABLES_GET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
messages["VARIABLES_GET_TOOLTIP"] = "Zwraca wartość tej zmiennej.";
messages["VARIABLES_SET"] = "przypisz %1 wartość %2";
messages["VARIABLES_SET_CREATE_GET"] = "Utwórz klocek 'pobierz %1'";
messages["VARIABLES_SET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
messages["VARIABLES_SET_TOOLTIP"] = "Wartości zmiennej i  wejście będą identyczne.";
messages["VARIABLE_ALREADY_EXISTS"] = "Zmienna o nazwie '%1' już istnieje.";
messages["VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE"] = "Zmienna o nazwie '%1' już istnieje i jest typu '%2'.";
messages["WORKSPACE_ARIA_LABEL"] = "Blockly Workspace";  // untranslated
messages["WORKSPACE_COMMENT_DEFAULT_TEXT"] = "Powiedz coś...";
messages["CONTROLS_FOREACH_INPUT_DO"] = messages["CONTROLS_REPEAT_INPUT_DO"];
messages["CONTROLS_FOR_INPUT_DO"] = messages["CONTROLS_REPEAT_INPUT_DO"];
messages["CONTROLS_IF_ELSEIF_TITLE_ELSEIF"] = messages["CONTROLS_IF_MSG_ELSEIF"];
messages["CONTROLS_IF_ELSE_TITLE_ELSE"] = messages["CONTROLS_IF_MSG_ELSE"];
messages["CONTROLS_IF_IF_TITLE_IF"] = messages["CONTROLS_IF_MSG_IF"];
messages["CONTROLS_IF_MSG_THEN"] = messages["CONTROLS_REPEAT_INPUT_DO"];
messages["CONTROLS_WHILEUNTIL_INPUT_DO"] = messages["CONTROLS_REPEAT_INPUT_DO"];
messages["LISTS_CREATE_WITH_ITEM_TITLE"] = messages["VARIABLES_DEFAULT_NAME"];
messages["LISTS_GET_INDEX_HELPURL"] = messages["LISTS_INDEX_OF_HELPURL"];
messages["LISTS_GET_INDEX_INPUT_IN_LIST"] = messages["LISTS_INLIST"];
messages["LISTS_GET_SUBLIST_INPUT_IN_LIST"] = messages["LISTS_INLIST"];
messages["LISTS_INDEX_OF_INPUT_IN_LIST"] = messages["LISTS_INLIST"];
messages["LISTS_SET_INDEX_INPUT_IN_LIST"] = messages["LISTS_INLIST"];
messages["MATH_CHANGE_TITLE_ITEM"] = messages["VARIABLES_DEFAULT_NAME"];
messages["PROCEDURES_DEFRETURN_COMMENT"] = messages["PROCEDURES_DEFNORETURN_COMMENT"];
messages["PROCEDURES_DEFRETURN_DO"] = messages["PROCEDURES_DEFNORETURN_DO"];
messages["PROCEDURES_DEFRETURN_PROCEDURE"] = messages["PROCEDURES_DEFNORETURN_PROCEDURE"];
messages["PROCEDURES_DEFRETURN_TITLE"] = messages["PROCEDURES_DEFNORETURN_TITLE"];
messages["TEXT_APPEND_VARIABLE"] = messages["VARIABLES_DEFAULT_NAME"];
messages["TEXT_CREATE_JOIN_ITEM_TITLE_ITEM"] = messages["VARIABLES_DEFAULT_NAME"];

messages["MATH_HUE"] = "230";
messages["LOOPS_HUE"] = "120";
messages["LISTS_HUE"] = "260";
messages["LOGIC_HUE"] = "210";
messages["VARIABLES_HUE"] = "330";
messages["TEXTS_HUE"] = "160";
messages["PROCEDURES_HUE"] = "290";
messages["COLOUR_HUE"] = "20";
messages["VARIABLES_DYNAMIC_HUE"] = "310";