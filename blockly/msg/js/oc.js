// This file was automatically generated.  Do not modify.

'use strict';

const messages = Object.create(null);

messages["ADD_COMMENT"] = "Apondre un comentari";
messages["CANNOT_DELETE_VARIABLE_PROCEDURE"] = "Can't delete the variable '%1' because it's part of the definition of the function '%2'";  // untranslated
messages["CHANGE_VALUE_TITLE"] = "Modificar la valor :";
messages["CLEAN_UP"] = "Netejar los blòts";
messages["COLLAPSED_WARNINGS_WARNING"] = "Collapsed blocks contain warnings.";  // untranslated
messages["COLLAPSE_ALL"] = "Redusir los blòts";
messages["COLLAPSE_BLOCK"] = "Redusir lo blòt";
messages["COLOUR_BLEND_COLOUR1"] = "color 1";
messages["COLOUR_BLEND_COLOUR2"] = "color 2";
messages["COLOUR_BLEND_HELPURL"] = "https://meyerweb.com/eric/tools/color-blend/#:::rgbp";  // untranslated
messages["COLOUR_BLEND_RATIO"] = "ratio";
messages["COLOUR_BLEND_TITLE"] = "mesclar";
messages["COLOUR_BLEND_TOOLTIP"] = "Blends two colours together with a given ratio (0.0 - 1.0).";  // untranslated
messages["COLOUR_PICKER_HELPURL"] = "https://oc.wikipedia.org/wiki/Color";
messages["COLOUR_PICKER_TOOLTIP"] = "Causir una color dins la paleta.";
messages["COLOUR_RANDOM_HELPURL"] = "http://randomcolour.com";  // untranslated
messages["COLOUR_RANDOM_TITLE"] = "color aleatòria";
messages["COLOUR_RANDOM_TOOLTIP"] = "Causir una color a l'azard.";
messages["COLOUR_RGB_BLUE"] = "blau";
messages["COLOUR_RGB_GREEN"] = "verd";
messages["COLOUR_RGB_HELPURL"] = "https://www.december.com/html/spec/colorpercompact.html";  // untranslated
messages["COLOUR_RGB_RED"] = "roge";
messages["COLOUR_RGB_TITLE"] = "coloriar amb";
messages["COLOUR_RGB_TOOLTIP"] = "Create a colour with the specified amount of red, green, and blue. All values must be between 0 and 100.";  // untranslated
messages["CONTROLS_FLOW_STATEMENTS_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
messages["CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK"] = "quitar la bocla";
messages["CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE"] = "passar a l’iteracion de bocla seguenta";
messages["CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK"] = "Sortir de la bocla englobanta.";
messages["CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE"] = "Skip the rest of this loop, and continue with the next iteration.";  // untranslated
messages["CONTROLS_FLOW_STATEMENTS_WARNING"] = "Warning: This block may only be used within a loop.";  // untranslated
messages["CONTROLS_FOREACH_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
messages["CONTROLS_FOREACH_TITLE"] = "per cada element %1 dins la lista %2";
messages["CONTROLS_FOREACH_TOOLTIP"] = "For each item in a list, set the variable '%1' to the item, and then do some statements.";  // untranslated
messages["CONTROLS_FOR_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
messages["CONTROLS_FOR_TITLE"] = "comptar amb %1 de %2 a %3 per %4";
messages["CONTROLS_FOR_TOOLTIP"] = "Have the variable '%1' take on the values from the start number to the end number, counting by the specified interval, and do the specified blocks.";  // untranslated
messages["CONTROLS_IF_ELSEIF_TOOLTIP"] = "Apondre una condicion al blòt 'se'.";
messages["CONTROLS_IF_ELSE_TOOLTIP"] = "Add a final, catch-all condition to the if block.";  // untranslated
messages["CONTROLS_IF_HELPURL"] = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
messages["CONTROLS_IF_IF_TOOLTIP"] = "Add, remove, or reorder sections to reconfigure this if block.";  // untranslated
messages["CONTROLS_IF_MSG_ELSE"] = "siquenon";
messages["CONTROLS_IF_MSG_ELSEIF"] = "siquenon se";
messages["CONTROLS_IF_MSG_IF"] = "se";
messages["CONTROLS_IF_TOOLTIP_1"] = "If a value is true, then do some statements.";  // untranslated
messages["CONTROLS_IF_TOOLTIP_2"] = "If a value is true, then do the first block of statements. Otherwise, do the second block of statements.";  // untranslated
messages["CONTROLS_IF_TOOLTIP_3"] = "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements.";  // untranslated
messages["CONTROLS_IF_TOOLTIP_4"] = "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements. If none of the values are true, do the last block of statements.";  // untranslated
messages["CONTROLS_REPEAT_HELPURL"] = "https://oc.wikipedia.org/wiki/For_loop";
messages["CONTROLS_REPEAT_INPUT_DO"] = "far";
messages["CONTROLS_REPEAT_TITLE"] = "repetir %1 còps";
messages["CONTROLS_REPEAT_TOOLTIP"] = "Do some statements several times.";  // untranslated
messages["CONTROLS_WHILEUNTIL_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
messages["CONTROLS_WHILEUNTIL_OPERATOR_UNTIL"] = "repetir fins a";
messages["CONTROLS_WHILEUNTIL_OPERATOR_WHILE"] = "repetir tant que";
messages["CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL"] = "While a value is false, then do some statements.";  // untranslated
messages["CONTROLS_WHILEUNTIL_TOOLTIP_WHILE"] = "While a value is true, then do some statements.";  // untranslated
messages["DELETE_ALL_BLOCKS"] = "Suprimir totes los %1 blòts ?";
messages["DELETE_BLOCK"] = "Suprimir lo blòt";
messages["DELETE_VARIABLE"] = "Suprimir la variabla '%1'";
messages["DELETE_VARIABLE_CONFIRMATION"] = "Delete %1 uses of the '%2' variable?";  // untranslated
messages["DELETE_X_BLOCKS"] = "Suprimir %1 blòts";
messages["DIALOG_CANCEL"] = "Anullar";
messages["DIALOG_OK"] = "D'acòrdi";
messages["DISABLE_BLOCK"] = "Desactivar lo blòt";
messages["DUPLICATE_BLOCK"] = "Duplicar";
messages["DUPLICATE_COMMENT"] = "Duplicate Comment";  // untranslated
messages["ENABLE_BLOCK"] = "Activar lo blòt";
messages["EXPAND_ALL"] = "Desvolopar los blòts";
messages["EXPAND_BLOCK"] = "Desvolopar lo blòt";
messages["EXTERNAL_INPUTS"] = "Entradas extèrnas";
messages["HELP"] = "Ajuda";
messages["INLINE_INPUTS"] = "Entradas en linha";
messages["LISTS_CREATE_EMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
messages["LISTS_CREATE_EMPTY_TITLE"] = "crear una lista voida";
messages["LISTS_CREATE_EMPTY_TOOLTIP"] = "Returns a list, of length 0, containing no data records";  // untranslated
messages["LISTS_CREATE_WITH_CONTAINER_TITLE_ADD"] = "lista";
messages["LISTS_CREATE_WITH_CONTAINER_TOOLTIP"] = "Add, remove, or reorder sections to reconfigure this list block.";  // untranslated
messages["LISTS_CREATE_WITH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
messages["LISTS_CREATE_WITH_INPUT_WITH"] = "crear una lista amb";
messages["LISTS_CREATE_WITH_ITEM_TOOLTIP"] = "Apondre un element a la lista.";
messages["LISTS_CREATE_WITH_TOOLTIP"] = "Create a list with any number of items.";  // untranslated
messages["LISTS_GET_INDEX_FIRST"] = "primièr";
messages["LISTS_GET_INDEX_FROM_END"] = "# dempuèi la fin";
messages["LISTS_GET_INDEX_FROM_START"] = "#";  // untranslated
messages["LISTS_GET_INDEX_GET"] = "obténer";
messages["LISTS_GET_INDEX_GET_REMOVE"] = "obténer e suprimir";
messages["LISTS_GET_INDEX_LAST"] = "darrièr";
messages["LISTS_GET_INDEX_RANDOM"] = "aleatòri";
messages["LISTS_GET_INDEX_REMOVE"] = "suprimit";
messages["LISTS_GET_INDEX_TAIL"] = "";  // untranslated
messages["LISTS_GET_INDEX_TOOLTIP_GET_FIRST"] = "Renvia lo primièr element dins una lista.";
messages["LISTS_GET_INDEX_TOOLTIP_GET_FROM"] = "Renvia l'element de la posicion especificada dins la lista.";
messages["LISTS_GET_INDEX_TOOLTIP_GET_LAST"] = "Returns the last item in a list.";  // untranslated
messages["LISTS_GET_INDEX_TOOLTIP_GET_RANDOM"] = "Returns a random item in a list.";  // untranslated
messages["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST"] = "Removes and returns the first item in a list.";  // untranslated
messages["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM"] = "Removes and returns the item at the specified position in a list.";  // untranslated
messages["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST"] = "Removes and returns the last item in a list.";  // untranslated
messages["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM"] = "Removes and returns a random item in a list.";  // untranslated
messages["LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST"] = "Removes the first item in a list.";  // untranslated
messages["LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM"] = "Removes the item at the specified position in a list.";  // untranslated
messages["LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST"] = "Removes the last item in a list.";  // untranslated
messages["LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM"] = "Removes a random item in a list.";  // untranslated
messages["LISTS_GET_SUBLIST_END_FROM_END"] = "fins a # dempuèi la fin";
messages["LISTS_GET_SUBLIST_END_FROM_START"] = "fins a #";
messages["LISTS_GET_SUBLIST_END_LAST"] = "fins a la fin";
messages["LISTS_GET_SUBLIST_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
messages["LISTS_GET_SUBLIST_START_FIRST"] = "get sub-list from first";  // untranslated
messages["LISTS_GET_SUBLIST_START_FROM_END"] = "get sub-list from # from end";  // untranslated
messages["LISTS_GET_SUBLIST_START_FROM_START"] = "get sub-list from #";  // untranslated
messages["LISTS_GET_SUBLIST_TAIL"] = "";  // untranslated
messages["LISTS_GET_SUBLIST_TOOLTIP"] = "Creates a copy of the specified portion of a list.";  // untranslated
messages["LISTS_INDEX_FROM_END_TOOLTIP"] = "%1 es lo darrièr element.";
messages["LISTS_INDEX_FROM_START_TOOLTIP"] = "%1 es lo primièr element.";
messages["LISTS_INDEX_OF_FIRST"] = "find first occurrence of item";  // untranslated
messages["LISTS_INDEX_OF_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
messages["LISTS_INDEX_OF_LAST"] = "find last occurrence of item";  // untranslated
messages["LISTS_INDEX_OF_TOOLTIP"] = "Returns the index of the first/last occurrence of the item in the list. Returns %1 if item is not found.";  // untranslated
messages["LISTS_INLIST"] = "dins la lista";
messages["LISTS_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
messages["LISTS_ISEMPTY_TITLE"] = "%1 es voida";
messages["LISTS_ISEMPTY_TOOLTIP"] = "Returns true if the list is empty.";  // untranslated
messages["LISTS_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
messages["LISTS_LENGTH_TITLE"] = "longitud de %1";
messages["LISTS_LENGTH_TOOLTIP"] = "Returns the length of a list.";  // untranslated
messages["LISTS_REPEAT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
messages["LISTS_REPEAT_TITLE"] = "create list with item %1 repeated %2 times";  // untranslated
messages["LISTS_REPEAT_TOOLTIP"] = "Creates a list consisting of the given value repeated the specified number of times.";  // untranslated
messages["LISTS_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#reversing-a-list";  // untranslated
messages["LISTS_REVERSE_MESSAGE0"] = "inversar %1";
messages["LISTS_REVERSE_TOOLTIP"] = "Inversar la còpia d’una lista.";
messages["LISTS_SET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
messages["LISTS_SET_INDEX_INPUT_TO"] = "coma";
messages["LISTS_SET_INDEX_INSERT"] = "inserir en";
messages["LISTS_SET_INDEX_SET"] = "metre";
messages["LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST"] = "Inserts the item at the start of a list.";  // untranslated
messages["LISTS_SET_INDEX_TOOLTIP_INSERT_FROM"] = "Inserts the item at the specified position in a list.";  // untranslated
messages["LISTS_SET_INDEX_TOOLTIP_INSERT_LAST"] = "Append the item to the end of a list.";  // untranslated
messages["LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM"] = "Inserts the item randomly in a list.";  // untranslated
messages["LISTS_SET_INDEX_TOOLTIP_SET_FIRST"] = "Sets the first item in a list.";  // untranslated
messages["LISTS_SET_INDEX_TOOLTIP_SET_FROM"] = "Sets the item at the specified position in a list.";  // untranslated
messages["LISTS_SET_INDEX_TOOLTIP_SET_LAST"] = "Sets the last item in a list.";  // untranslated
messages["LISTS_SET_INDEX_TOOLTIP_SET_RANDOM"] = "Sets a random item in a list.";  // untranslated
messages["LISTS_SORT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";  // untranslated
messages["LISTS_SORT_ORDER_ASCENDING"] = "creissent";
messages["LISTS_SORT_ORDER_DESCENDING"] = "descreissent";
messages["LISTS_SORT_TITLE"] = "triar %1 %2 %3";
messages["LISTS_SORT_TOOLTIP"] = "Sort a copy of a list.";  // untranslated
messages["LISTS_SORT_TYPE_IGNORECASE"] = "alphabetic, ignore case";  // untranslated
messages["LISTS_SORT_TYPE_NUMERIC"] = "numeric";
messages["LISTS_SORT_TYPE_TEXT"] = "alfabetic";
messages["LISTS_SPLIT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated
messages["LISTS_SPLIT_LIST_FROM_TEXT"] = "make list from text";  // untranslated
messages["LISTS_SPLIT_TEXT_FROM_LIST"] = "make text from list";  // untranslated
messages["LISTS_SPLIT_TOOLTIP_JOIN"] = "Join a list of texts into one text, separated by a delimiter.";  // untranslated
messages["LISTS_SPLIT_TOOLTIP_SPLIT"] = "Split text into a list of texts, breaking at each delimiter.";  // untranslated
messages["LISTS_SPLIT_WITH_DELIMITER"] = "amb lo separador";
messages["LOGIC_BOOLEAN_FALSE"] = "fals";
messages["LOGIC_BOOLEAN_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
messages["LOGIC_BOOLEAN_TOOLTIP"] = "Renvia siá verai siá fals.";
messages["LOGIC_BOOLEAN_TRUE"] = "verai";
messages["LOGIC_COMPARE_HELPURL"] = "https://fr.wikipedia.org/wiki/Inegalite_(mathematiques)";
messages["LOGIC_COMPARE_TOOLTIP_EQ"] = "Renviar verai se las doas entradas son egalas.";
messages["LOGIC_COMPARE_TOOLTIP_GT"] = "Return true if the first input is greater than the second input.";  // untranslated
messages["LOGIC_COMPARE_TOOLTIP_GTE"] = "Return true if the first input is greater than or equal to the second input.";  // untranslated
messages["LOGIC_COMPARE_TOOLTIP_LT"] = "Return true if the first input is smaller than the second input.";  // untranslated
messages["LOGIC_COMPARE_TOOLTIP_LTE"] = "Return true if the first input is smaller than or equal to the second input.";  // untranslated
messages["LOGIC_COMPARE_TOOLTIP_NEQ"] = "Renviar verai se las doas entradas son diferentas.";
messages["LOGIC_NEGATE_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
messages["LOGIC_NEGATE_TITLE"] = "pas %1";
messages["LOGIC_NEGATE_TOOLTIP"] = "Returns true if the input is false. Returns false if the input is true.";  // untranslated
messages["LOGIC_NULL"] = "nul";
messages["LOGIC_NULL_HELPURL"] = "https://en.wikipedia.org/wiki/Nullable_type";  // untranslated
messages["LOGIC_NULL_TOOLTIP"] = "Renvia nul.";
messages["LOGIC_OPERATION_AND"] = "e";
messages["LOGIC_OPERATION_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
messages["LOGIC_OPERATION_OR"] = "o";
messages["LOGIC_OPERATION_TOOLTIP_AND"] = "Renviar verai se las doas entradas son vertadièras.";
messages["LOGIC_OPERATION_TOOLTIP_OR"] = "Return true if at least one of the inputs is true.";  // untranslated
messages["LOGIC_TERNARY_CONDITION"] = "tèst";
messages["LOGIC_TERNARY_HELPURL"] = "https://en.wikipedia.org/wiki/%3F:";  // untranslated
messages["LOGIC_TERNARY_IF_FALSE"] = "se fals";
messages["LOGIC_TERNARY_IF_TRUE"] = "se verai";
messages["LOGIC_TERNARY_TOOLTIP"] = "Check the condition in 'test'. If the condition is true, returns the 'if true' value; otherwise returns the 'if false' value.";  // untranslated
messages["MATH_ADDITION_SYMBOL"] = "+";  // untranslated
messages["MATH_ARITHMETIC_HELPURL"] = "https://oc.wikipedia.org/wiki/Aritmetica";
messages["MATH_ARITHMETIC_TOOLTIP_ADD"] = "Renvia la soma dels dos nombres.";
messages["MATH_ARITHMETIC_TOOLTIP_DIVIDE"] = "Return the quotient of the two numbers.";  // untranslated
messages["MATH_ARITHMETIC_TOOLTIP_MINUS"] = "Return the difference of the two numbers.";  // untranslated
messages["MATH_ARITHMETIC_TOOLTIP_MULTIPLY"] = "Return the product of the two numbers.";  // untranslated
messages["MATH_ARITHMETIC_TOOLTIP_POWER"] = "Return the first number raised to the power of the second number.";  // untranslated
messages["MATH_ATAN2_HELPURL"] = "https://en.wikipedia.org/wiki/Atan2";  // untranslated
messages["MATH_ATAN2_TITLE"] = "atan2 of X:%1 Y:%2";  // untranslated
messages["MATH_ATAN2_TOOLTIP"] = "Return the arctangent of point (X, Y) in degrees from -180 to 180.";  // untranslated
messages["MATH_CHANGE_HELPURL"] = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";  // untranslated
messages["MATH_CHANGE_TITLE"] = "incrementar %1 per %2";
messages["MATH_CHANGE_TOOLTIP"] = "Add a number to variable '%1'.";  // untranslated
messages["MATH_CONSTANT_HELPURL"] = "https://en.wikipedia.org/wiki/Mathematical_constant";
messages["MATH_CONSTANT_TOOLTIP"] = "Return one of the common constants: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), or ∞ (infinity).";  // untranslated
messages["MATH_CONSTRAIN_HELPURL"] = "https://en.wikipedia.org/wiki/Clamping_(graphics)";  // untranslated
messages["MATH_CONSTRAIN_TITLE"] = "constrénher %1 entre %2 e %3";
messages["MATH_CONSTRAIN_TOOLTIP"] = "Constrain a number to be between the specified limits (inclusive).";  // untranslated
messages["MATH_DIVISION_SYMBOL"] = "÷";  // untranslated
messages["MATH_IS_DIVISIBLE_BY"] = "es devesible per";
messages["MATH_IS_EVEN"] = "es par";
messages["MATH_IS_NEGATIVE"] = "es negatiu";
messages["MATH_IS_ODD"] = "es impar";
messages["MATH_IS_POSITIVE"] = "es positiu";
messages["MATH_IS_PRIME"] = "es primièr";
messages["MATH_IS_TOOLTIP"] = "Check if a number is an even, odd, prime, whole, positive, negative, or if it is divisible by certain number. Returns true or false.";  // untranslated
messages["MATH_IS_WHOLE"] = "es entièr";
messages["MATH_MODULO_HELPURL"] = "https://en.wikipedia.org/wiki/Modulo_operation";
messages["MATH_MODULO_TITLE"] = "residú de %1 ÷ %2";
messages["MATH_MODULO_TOOLTIP"] = "Return the remainder from dividing the two numbers.";  // untranslated
messages["MATH_MULTIPLICATION_SYMBOL"] = "×";  // untranslated
messages["MATH_NUMBER_HELPURL"] = "https://oc.wikipedia.org/wiki/Nombre";
messages["MATH_NUMBER_TOOLTIP"] = "Un nombre.";
messages["MATH_ONLIST_HELPURL"] = "";  // untranslated
messages["MATH_ONLIST_OPERATOR_AVERAGE"] = "mejana de la lista";
messages["MATH_ONLIST_OPERATOR_MAX"] = "maximum de la lista";
messages["MATH_ONLIST_OPERATOR_MEDIAN"] = "mediana de la lista";
messages["MATH_ONLIST_OPERATOR_MIN"] = "minimum de la lista";
messages["MATH_ONLIST_OPERATOR_MODE"] = "majoritaris de la lista";
messages["MATH_ONLIST_OPERATOR_RANDOM"] = "element aleatòri de lista";
messages["MATH_ONLIST_OPERATOR_STD_DEV"] = "escart-tipe de la lista";
messages["MATH_ONLIST_OPERATOR_SUM"] = "soma de la lista";
messages["MATH_ONLIST_TOOLTIP_AVERAGE"] = "Return the average (arithmetic mean) of the numeric values in the list.";  // untranslated
messages["MATH_ONLIST_TOOLTIP_MAX"] = "Return the largest number in the list.";  // untranslated
messages["MATH_ONLIST_TOOLTIP_MEDIAN"] = "Return the median number in the list.";  // untranslated
messages["MATH_ONLIST_TOOLTIP_MIN"] = "Return the smallest number in the list.";  // untranslated
messages["MATH_ONLIST_TOOLTIP_MODE"] = "Return a list of the most common item(s) in the list.";  // untranslated
messages["MATH_ONLIST_TOOLTIP_RANDOM"] = "Return a random element from the list.";  // untranslated
messages["MATH_ONLIST_TOOLTIP_STD_DEV"] = "Return the standard deviation of the list.";  // untranslated
messages["MATH_ONLIST_TOOLTIP_SUM"] = "Return the sum of all the numbers in the list.";  // untranslated
messages["MATH_POWER_SYMBOL"] = "^";  // untranslated
messages["MATH_RANDOM_FLOAT_HELPURL"] = "https://en.wikipedia.org/wiki/Random_number_generation";
messages["MATH_RANDOM_FLOAT_TITLE_RANDOM"] = "fraccion aleatòria";
messages["MATH_RANDOM_FLOAT_TOOLTIP"] = "Return a random fraction between 0.0 (inclusive) and 1.0 (exclusive).";  // untranslated
messages["MATH_RANDOM_INT_HELPURL"] = "https://en.wikipedia.org/wiki/Random_number_generation";
messages["MATH_RANDOM_INT_TITLE"] = "random integer from %1 to %2";  // untranslated
messages["MATH_RANDOM_INT_TOOLTIP"] = "Return a random integer between the two specified limits, inclusive.";  // untranslated
messages["MATH_ROUND_HELPURL"] = "https://en.wikipedia.org/wiki/Rounding";  // untranslated
messages["MATH_ROUND_OPERATOR_ROUND"] = "arredondir";
messages["MATH_ROUND_OPERATOR_ROUNDDOWN"] = "arredondir a l’inferior";
messages["MATH_ROUND_OPERATOR_ROUNDUP"] = "arredondir al superior";
messages["MATH_ROUND_TOOLTIP"] = "Round a number up or down.";  // untranslated
messages["MATH_SINGLE_HELPURL"] = "https://fr.wikipedia.org/wiki/Racine_carree";
messages["MATH_SINGLE_OP_ABSOLUTE"] = "absolut";
messages["MATH_SINGLE_OP_ROOT"] = "raiç carrada";
messages["MATH_SINGLE_TOOLTIP_ABS"] = "Renvia la valor absoluda d’un nombre.";
messages["MATH_SINGLE_TOOLTIP_EXP"] = "Renvia a la poténcia d’un nombre.";
messages["MATH_SINGLE_TOOLTIP_LN"] = "Renvia lo logaritme natural d’un nombre.";
messages["MATH_SINGLE_TOOLTIP_LOG10"] = "Renvia lo logaritme decimal d’un nombre.";
messages["MATH_SINGLE_TOOLTIP_NEG"] = "Renvia l’opausat d’un nombre";
messages["MATH_SINGLE_TOOLTIP_POW10"] = "Renvia 10 a la poténcia d’un nombre.";
messages["MATH_SINGLE_TOOLTIP_ROOT"] = "Renvia la raiç carrada d’un nombre.";
messages["MATH_SUBTRACTION_SYMBOL"] = "-";  // untranslated
messages["MATH_TRIG_ACOS"] = "acos";  // untranslated
messages["MATH_TRIG_ASIN"] = "asin";  // untranslated
messages["MATH_TRIG_ATAN"] = "atan";  // untranslated
messages["MATH_TRIG_COS"] = "cos";  // untranslated
messages["MATH_TRIG_HELPURL"] = "https://en.wikipedia.org/wiki/Trigonometric_functions";
messages["MATH_TRIG_SIN"] = "sin";  // untranslated
messages["MATH_TRIG_TAN"] = "tan";  // untranslated
messages["MATH_TRIG_TOOLTIP_ACOS"] = "Renvia l’arccosinus d’un nombre.";
messages["MATH_TRIG_TOOLTIP_ASIN"] = "Renvia l’arcsinus d’un nombre.";
messages["MATH_TRIG_TOOLTIP_ATAN"] = "Renvia l’arctangenta d’un nombre.";
messages["MATH_TRIG_TOOLTIP_COS"] = "Renvia lo cosinus d’un angle en grases (pas en radians).";
messages["MATH_TRIG_TOOLTIP_SIN"] = "Renvia lo sinus d’un angle en grases (pas en radians).";
messages["MATH_TRIG_TOOLTIP_TAN"] = "Renvia la tangenta d’un angle en grases (pas en radians).";
messages["NEW_COLOUR_VARIABLE"] = "Crear una variabla color…";
messages["NEW_NUMBER_VARIABLE"] = "Crear una variabla nombre…";
messages["NEW_STRING_VARIABLE"] = "Crear una variabla cadena…";
messages["NEW_VARIABLE"] = "Crear una variabla...";
messages["NEW_VARIABLE_TITLE"] = "Nom de la novèla variabla :";
messages["NEW_VARIABLE_TYPE_TITLE"] = "Novèl tipe de variabla :";
messages["ORDINAL_NUMBER_SUFFIX"] = "";  // untranslated
messages["PROCEDURES_ALLOW_STATEMENTS"] = "autorizar los òrdres";
messages["PROCEDURES_BEFORE_PARAMS"] = "amb :";
messages["PROCEDURES_CALLNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";
messages["PROCEDURES_CALLNORETURN_TOOLTIP"] = "Run the user-defined function '%1'.";  // untranslated
messages["PROCEDURES_CALLRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";
messages["PROCEDURES_CALLRETURN_TOOLTIP"] = "Run the user-defined function '%1' and use its output.";  // untranslated
messages["PROCEDURES_CALL_BEFORE_PARAMS"] = "amb :";
messages["PROCEDURES_CREATE_DO"] = "Crear '%1'";
messages["PROCEDURES_DEFNORETURN_COMMENT"] = "Describe this function...";  // untranslated
messages["PROCEDURES_DEFNORETURN_DO"] = "";  // untranslated
messages["PROCEDURES_DEFNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
messages["PROCEDURES_DEFNORETURN_PROCEDURE"] = "far quicòm";
messages["PROCEDURES_DEFNORETURN_TITLE"] = "a";
messages["PROCEDURES_DEFNORETURN_TOOLTIP"] = "Creates a function with no output.";  // untranslated
messages["PROCEDURES_DEFRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
messages["PROCEDURES_DEFRETURN_RETURN"] = "retorn";
messages["PROCEDURES_DEFRETURN_TOOLTIP"] = "Creates a function with an output.";  // untranslated
messages["PROCEDURES_DEF_DUPLICATE_WARNING"] = "Warning: This function has duplicate parameters.";  // untranslated
messages["PROCEDURES_HIGHLIGHT_DEF"] = "Highlight function definition";  // untranslated
messages["PROCEDURES_IFRETURN_HELPURL"] = "http://c2.com/cgi/wiki?GuardClause";  // untranslated
messages["PROCEDURES_IFRETURN_TOOLTIP"] = "If a value is true, then return a second value.";  // untranslated
messages["PROCEDURES_IFRETURN_WARNING"] = "Warning: This block may be used only within a function definition.";  // untranslated
messages["PROCEDURES_MUTATORARG_TITLE"] = "nom de l’entrada :";
messages["PROCEDURES_MUTATORARG_TOOLTIP"] = "Add an input to the function.";  // untranslated
messages["PROCEDURES_MUTATORCONTAINER_TITLE"] = "entradas";
messages["PROCEDURES_MUTATORCONTAINER_TOOLTIP"] = "Add, remove, or reorder inputs to this function.";  // untranslated
messages["REDO"] = "Refar";
messages["REMOVE_COMMENT"] = "Suprimir un comentari";
messages["RENAME_VARIABLE"] = "Renomenar la variabla…";
messages["RENAME_VARIABLE_TITLE"] = "Renomenar totas las variablas « %1 » a :";
messages["TEXT_APPEND_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
messages["TEXT_APPEND_TITLE"] = "a %1 apondre lo tèxte %2";
messages["TEXT_APPEND_TOOLTIP"] = "Append some text to variable '%1'.";  // untranslated
messages["TEXT_CHANGECASE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
messages["TEXT_CHANGECASE_OPERATOR_LOWERCASE"] = "en minusculas";
messages["TEXT_CHANGECASE_OPERATOR_TITLECASE"] = "en Majuscula Al Començament De Cada Mot";
messages["TEXT_CHANGECASE_OPERATOR_UPPERCASE"] = "en MAJUSCULAS";
messages["TEXT_CHANGECASE_TOOLTIP"] = "Return a copy of the text in a different case.";  // untranslated
messages["TEXT_CHARAT_FIRST"] = "obténer la primièra letra";
messages["TEXT_CHARAT_FROM_END"] = "obténer la letra # dempuèi la fin";
messages["TEXT_CHARAT_FROM_START"] = "obténer la letra #";
messages["TEXT_CHARAT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
messages["TEXT_CHARAT_LAST"] = "obténer la darrièra letra";
messages["TEXT_CHARAT_RANDOM"] = "obténer una letra a l'azard";
messages["TEXT_CHARAT_TAIL"] = "";  // untranslated
messages["TEXT_CHARAT_TITLE"] = "dins lo tèxte %1 %2";
messages["TEXT_CHARAT_TOOLTIP"] = "Renvia la letra a la posicion indicada.";
messages["TEXT_COUNT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#counting-substrings";  // untranslated
messages["TEXT_COUNT_MESSAGE0"] = "nombre %1 sus %2";
messages["TEXT_COUNT_TOOLTIP"] = "Count how many times some text occurs within some other text.";  // untranslated
messages["TEXT_CREATE_JOIN_ITEM_TOOLTIP"] = "Add an item to the text.";  // untranslated
messages["TEXT_CREATE_JOIN_TITLE_JOIN"] = "jónher";
messages["TEXT_CREATE_JOIN_TOOLTIP"] = "Add, remove, or reorder sections to reconfigure this text block.";  // untranslated
messages["TEXT_GET_SUBSTRING_END_FROM_END"] = "to letter # from end";  // untranslated
messages["TEXT_GET_SUBSTRING_END_FROM_START"] = "fins a la letra #";
messages["TEXT_GET_SUBSTRING_END_LAST"] = "fins a la darrièra letra";
messages["TEXT_GET_SUBSTRING_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
messages["TEXT_GET_SUBSTRING_INPUT_IN_TEXT"] = "dins lo tèxte";
messages["TEXT_GET_SUBSTRING_START_FIRST"] = "get substring from first letter";  // untranslated
messages["TEXT_GET_SUBSTRING_START_FROM_END"] = "get substring from letter # from end";  // untranslated
messages["TEXT_GET_SUBSTRING_START_FROM_START"] = "get substring from letter #";  // untranslated
messages["TEXT_GET_SUBSTRING_TAIL"] = "";  // untranslated
messages["TEXT_GET_SUBSTRING_TOOLTIP"] = "Returns a specified portion of the text.";  // untranslated
messages["TEXT_INDEXOF_HELPURL"] = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
messages["TEXT_INDEXOF_OPERATOR_FIRST"] = "find first occurrence of text";  // untranslated
messages["TEXT_INDEXOF_OPERATOR_LAST"] = "find last occurrence of text";  // untranslated
messages["TEXT_INDEXOF_TITLE"] = "dins lo tèxte %1 %2 %3";
messages["TEXT_INDEXOF_TOOLTIP"] = "Returns the index of the first/last occurrence of the first text in the second text. Returns %1 if text is not found.";  // untranslated
messages["TEXT_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
messages["TEXT_ISEMPTY_TITLE"] = "%1 es void";
messages["TEXT_ISEMPTY_TOOLTIP"] = "Returns true if the provided text is empty.";  // untranslated
messages["TEXT_JOIN_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
messages["TEXT_JOIN_TITLE_CREATEWITH"] = "crear un tèxte amb";
messages["TEXT_JOIN_TOOLTIP"] = "Create a piece of text by joining together any number of items.";  // untranslated
messages["TEXT_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
messages["TEXT_LENGTH_TITLE"] = "longor de %1";
messages["TEXT_LENGTH_TOOLTIP"] = "Returns the number of letters (including spaces) in the provided text.";  // untranslated
messages["TEXT_PRINT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
messages["TEXT_PRINT_TITLE"] = "afichar %1";
messages["TEXT_PRINT_TOOLTIP"] = "Print the specified text, number or other value.";  // untranslated
messages["TEXT_PROMPT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
messages["TEXT_PROMPT_TOOLTIP_NUMBER"] = "Prompt for user for a number.";  // untranslated
messages["TEXT_PROMPT_TOOLTIP_TEXT"] = "Prompt for user for some text.";  // untranslated
messages["TEXT_PROMPT_TYPE_NUMBER"] = "prompt for number with message";  // untranslated
messages["TEXT_PROMPT_TYPE_TEXT"] = "prompt for text with message";  // untranslated
messages["TEXT_REPLACE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#replacing-substrings";  // untranslated
messages["TEXT_REPLACE_MESSAGE0"] = "replace %1 with %2 in %3";  // untranslated
messages["TEXT_REPLACE_TOOLTIP"] = "Replace all occurances of some text within some other text.";  // untranslated
messages["TEXT_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#reversing-text";  // untranslated
messages["TEXT_REVERSE_MESSAGE0"] = "inversar %1";
messages["TEXT_REVERSE_TOOLTIP"] = "Reverses the order of the characters in the text.";  // untranslated
messages["TEXT_TEXT_HELPURL"] = "https://en.wikipedia.org/wiki/String_(computer_science)";
messages["TEXT_TEXT_TOOLTIP"] = "Una letra, un mot o una linha de tèxte.";
messages["TEXT_TRIM_HELPURL"] = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
messages["TEXT_TRIM_OPERATOR_BOTH"] = "suprimir los espacis dels dos costats";
messages["TEXT_TRIM_OPERATOR_LEFT"] = "trim spaces from left side of";  // untranslated
messages["TEXT_TRIM_OPERATOR_RIGHT"] = "trim spaces from right side of";  // untranslated
messages["TEXT_TRIM_TOOLTIP"] = "Return a copy of the text with spaces removed from one or both ends.";  // untranslated
messages["TODAY"] = "Uèi";
messages["UNDO"] = "Anullar";
messages["UNNAMED_KEY"] = "unnamed";  // untranslated
messages["VARIABLES_DEFAULT_NAME"] = "element";
messages["VARIABLES_GET_CREATE_SET"] = "Crear 'fixar %1'";
messages["VARIABLES_GET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
messages["VARIABLES_GET_TOOLTIP"] = "Returns the value of this variable.";  // untranslated
messages["VARIABLES_SET"] = "fixar %1 a %2";
messages["VARIABLES_SET_CREATE_GET"] = "Crear 'obténer %1'";
messages["VARIABLES_SET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
messages["VARIABLES_SET_TOOLTIP"] = "Sets this variable to be equal to the input.";  // untranslated
messages["VARIABLE_ALREADY_EXISTS"] = "Existís ja una variabla nomenada \"%1\".";
messages["VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE"] = "A variable named '%1' already exists for another type: '%2'.";  // untranslated
messages["WORKSPACE_ARIA_LABEL"] = "Blockly Workspace";  // untranslated
messages["WORKSPACE_COMMENT_DEFAULT_TEXT"] = "Say something...";  // untranslated
messages["CONTROLS_FOREACH_INPUT_DO"] = messages["CONTROLS_REPEAT_INPUT_DO"];
messages["CONTROLS_FOR_INPUT_DO"] = messages["CONTROLS_REPEAT_INPUT_DO"];
messages["CONTROLS_IF_ELSEIF_TITLE_ELSEIF"] = messages["CONTROLS_IF_MSG_ELSEIF"];
messages["CONTROLS_IF_ELSE_TITLE_ELSE"] = messages["CONTROLS_IF_MSG_ELSE"];
messages["CONTROLS_IF_IF_TITLE_IF"] = messages["CONTROLS_IF_MSG_IF"];
messages["CONTROLS_IF_MSG_THEN"] = messages["CONTROLS_REPEAT_INPUT_DO"];
messages["CONTROLS_WHILEUNTIL_INPUT_DO"] = messages["CONTROLS_REPEAT_INPUT_DO"];
messages["LISTS_CREATE_WITH_ITEM_TITLE"] = messages["VARIABLES_DEFAULT_NAME"];
messages["LISTS_GET_INDEX_HELPURL"] = messages["LISTS_INDEX_OF_HELPURL"];
messages["LISTS_GET_INDEX_INPUT_IN_LIST"] = messages["LISTS_INLIST"];
messages["LISTS_GET_SUBLIST_INPUT_IN_LIST"] = messages["LISTS_INLIST"];
messages["LISTS_INDEX_OF_INPUT_IN_LIST"] = messages["LISTS_INLIST"];
messages["LISTS_SET_INDEX_INPUT_IN_LIST"] = messages["LISTS_INLIST"];
messages["MATH_CHANGE_TITLE_ITEM"] = messages["VARIABLES_DEFAULT_NAME"];
messages["PROCEDURES_DEFRETURN_COMMENT"] = messages["PROCEDURES_DEFNORETURN_COMMENT"];
messages["PROCEDURES_DEFRETURN_DO"] = messages["PROCEDURES_DEFNORETURN_DO"];
messages["PROCEDURES_DEFRETURN_PROCEDURE"] = messages["PROCEDURES_DEFNORETURN_PROCEDURE"];
messages["PROCEDURES_DEFRETURN_TITLE"] = messages["PROCEDURES_DEFNORETURN_TITLE"];
messages["TEXT_APPEND_VARIABLE"] = messages["VARIABLES_DEFAULT_NAME"];
messages["TEXT_CREATE_JOIN_ITEM_TITLE_ITEM"] = messages["VARIABLES_DEFAULT_NAME"];

messages["MATH_HUE"] = "230";
messages["LOOPS_HUE"] = "120";
messages["LISTS_HUE"] = "260";
messages["LOGIC_HUE"] = "210";
messages["VARIABLES_HUE"] = "330";
messages["TEXTS_HUE"] = "160";
messages["PROCEDURES_HUE"] = "290";
messages["COLOUR_HUE"] = "20";
messages["VARIABLES_DYNAMIC_HUE"] = "310";